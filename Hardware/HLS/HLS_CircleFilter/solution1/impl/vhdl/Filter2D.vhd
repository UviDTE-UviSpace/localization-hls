-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv13_1FFE : STD_LOGIC_VECTOR (12 downto 0) := "1111111111110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv32_FFFFFFFC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv17_11B : STD_LOGIC_VECTOR (16 downto 0) := "00000000100011011";
    constant ap_const_lv18_11B : STD_LOGIC_VECTOR (17 downto 0) := "000000000100011011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_52 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001010010";
    constant ap_const_lv18_1AC : STD_LOGIC_VECTOR (17 downto 0) := "000000000110101100";
    constant ap_const_lv19_3D3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001111010011";
    constant ap_const_lv20_5C8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010111001000";
    constant ap_const_lv20_8BD : STD_LOGIC_VECTOR (19 downto 0) := "00000000100010111101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln444_reg_2569 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_2578 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2518 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_2509 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal and_ln512_reg_2601 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2601_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_3_reg_453 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_cols_V_read_cas_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_cols_V_read_cas_reg_2440 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_rows_V_read_cas_fu_468_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_rows_V_read_cas_reg_2446 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_reg_2462 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_3_fu_496_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_3_reg_2467 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln507_fu_520_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln507_reg_2472 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln147_1_fu_526_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln147_1_reg_2481 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln147_1_fu_550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln147_1_reg_2490 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln458_fu_554_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln458_reg_2495 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln443_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_565_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_2504 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_2513 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2523 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_2527 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2531 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_reg_2535 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_fu_952_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_reg_2544 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_1_fu_984_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_1_reg_2549 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_2_fu_1016_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_2_reg_2554 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_3_fu_1048_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_3_reg_2559 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_4_fu_1080_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_4_reg_2564 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln444_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op225_read_state4 : BOOLEAN;
    signal ap_predicate_op236_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_2569_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_2569_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_2569_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_2569_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_1090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_2578_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_1201_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_2582 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln458_1_fu_1209_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln458_1_reg_2587 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln457_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_2592 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_2592_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2601_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2601_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2601_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2601_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2601_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_5_fu_1249_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln493_5_reg_2610 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_buf_0_val_6_addr_reg_2617 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_7_addr_reg_2623 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_8_addr_reg_2629 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_1253_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_2635 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_addr_reg_2640 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_1269_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_reg_2646 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_1498_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2651 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2651_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2651_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_1520_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2657 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2657_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2657_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_1542_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2663 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2663_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2663_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_fu_1564_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2669 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2669_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2669_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_1586_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_2675 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2057_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_reg_2681 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_2074_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln703_2_reg_2686 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_2082_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_3_reg_2691 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2098_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln703_6_reg_2696 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal grp_fu_2106_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_8_reg_2701 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_10_fu_2114_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_10_reg_2706 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_13_fu_2128_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1118_13_reg_2711 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1118_14_fu_2134_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_14_reg_2716 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2120_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_17_reg_2721 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2140_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln703_2_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_12_fu_1847_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_12_reg_2731 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_15_fu_1856_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln703_15_fu_1856_p2 : signal is "no";
    signal add_ln703_15_reg_2736 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln703_22_fu_1867_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 of add_ln703_22_fu_1867_p2 : signal is "no";
    signal add_ln703_22_reg_2741 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_4_fu_2049_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_reg_2746 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_6_ce0 : STD_LOGIC;
    signal k_buf_0_val_6_we0 : STD_LOGIC;
    signal k_buf_0_val_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_6_ce1 : STD_LOGIC;
    signal k_buf_0_val_6_we1 : STD_LOGIC;
    signal k_buf_0_val_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_7_ce0 : STD_LOGIC;
    signal k_buf_0_val_7_we0 : STD_LOGIC;
    signal k_buf_0_val_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_7_ce1 : STD_LOGIC;
    signal k_buf_0_val_7_we1 : STD_LOGIC;
    signal k_buf_0_val_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_8_ce0 : STD_LOGIC;
    signal k_buf_0_val_8_we0 : STD_LOGIC;
    signal k_buf_0_val_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_8_ce1 : STD_LOGIC;
    signal k_buf_0_val_8_we1 : STD_LOGIC;
    signal k_buf_0_val_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_9_ce0 : STD_LOGIC;
    signal k_buf_0_val_9_we0 : STD_LOGIC;
    signal k_buf_0_val_9_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_9_ce1 : STD_LOGIC;
    signal k_buf_0_val_9_we1 : STD_LOGIC;
    signal t_V_reg_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln835_fu_1241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_27 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_30 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_31 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_32 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_34 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_10_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_11_fu_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_36 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_12_fu_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_13_fu_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_38 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_14_fu_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_39 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_56 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_15_fu_226 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_40 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_fu_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_17_fu_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_43 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_242 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_44 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_246 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_1347_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_254 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_258 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_262 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1369_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_6_fu_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_7_fu_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_8_fu_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_4_0_fu_1404_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_9_fu_282 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_10_fu_286 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1391_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_11_fu_290 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_12_fu_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_13_fu_298 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_302 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_3_0_fu_1398_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_18 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_src_cols_V_read_cas_fu_464_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_src_rows_V_read_cas_fu_468_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln443_fu_472_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln443_fu_472_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln443_fu_476_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln443_2_fu_486_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln443_2_fu_486_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln443_1_fu_490_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln506_fu_500_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln458_fu_504_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln147_fu_508_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln147_fu_508_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln506_fu_500_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln147_1_fu_512_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_532_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_532_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln147_fu_540_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln147_fu_544_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln458_fu_504_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln506_fu_615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_2_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_fu_654_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_1_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_1_fu_677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_683_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_2_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_3_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_708_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_1_fu_716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_2_fu_722_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_2_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_745_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_3_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_4_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_770_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_2_fu_778_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_3_fu_784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_3_fu_801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_807_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_4_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_5_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_832_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_3_fu_840_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_4_fu_846_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_4_fu_863_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_5_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_6_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_894_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_4_fu_902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_5_fu_908_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln147_1_fu_673_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln144_1_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_fu_925_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln506_1_fu_611_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_1_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_fu_938_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln144_fu_930_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_fu_944_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln147_2_fu_735_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln144_2_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_1_fu_957_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_2_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_1_fu_970_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln144_1_fu_962_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_1_fu_976_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln147_3_fu_797_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln144_3_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_2_fu_989_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_3_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_2_fu_1002_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln144_2_fu_994_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_2_fu_1008_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln147_4_fu_859_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln144_4_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_3_fu_1021_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_4_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_1_fu_1034_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln144_3_fu_1026_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_3_fu_1040_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln147_5_fu_921_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln144_5_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_4_fu_1053_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_5_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_3_fu_1066_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln144_4_fu_1058_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_4_fu_1072_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_1096_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ImagLoc_x_fu_1112_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1118_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_7_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_5_fu_1151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_fu_1157_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln147_fu_1170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln118_8_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln118_5_fu_1175_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln891_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_1332_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1354_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1376_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1483_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1505_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1527_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1549_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1571_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln703_fu_1607_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2065_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln703_1_fu_1643_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_5_fu_1701_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln703_4_fu_1704_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 of add_ln703_4_fu_1704_p2 : signal is "no";
    signal mul_ln1118_7_fu_1724_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_16_fu_1760_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2148_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln703_11_fu_1809_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2157_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln703_10_fu_1812_p2 : STD_LOGIC_VECTOR (20 downto 0);
    attribute use_dsp48 of add_ln703_10_fu_1812_p2 : signal is "no";
    signal grp_fu_2166_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln703_13_fu_1844_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln703_12_fu_1817_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2191_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln703_14_fu_1853_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2174_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2199_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln703_18_fu_1864_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2182_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln703_15_fu_1976_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln703_19_fu_1984_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_16_fu_1979_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_s_fu_1987_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_26_fu_2003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1993_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_fu_2011_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_2021_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_2015_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_2035_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln777_fu_2029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_2043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2057_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2057_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2057_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2065_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2065_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2065_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2074_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2074_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2074_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2082_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2082_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2082_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2090_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2090_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2090_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2098_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2098_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2090_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2106_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2106_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2106_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_10_fu_2114_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1118_10_fu_2114_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2120_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2120_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2120_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_13_fu_2128_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_13_fu_2128_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_14_fu_2134_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_14_fu_2134_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2140_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2140_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2140_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2148_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2148_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2148_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2157_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2157_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2157_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2166_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2166_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2174_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2174_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2182_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2182_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2182_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2191_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2191_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2199_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2199_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2199_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op226_store_state4 : BOOLEAN;
    signal ap_enable_operation_226 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op223_load_state4 : BOOLEAN;
    signal ap_enable_operation_223 : BOOLEAN;
    signal ap_enable_operation_266 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op274_store_state5 : BOOLEAN;
    signal ap_enable_operation_274 : BOOLEAN;
    signal ap_predicate_op228_store_state4 : BOOLEAN;
    signal ap_enable_operation_228 : BOOLEAN;
    signal ap_enable_operation_220 : BOOLEAN;
    signal ap_enable_operation_264 : BOOLEAN;
    signal ap_predicate_op275_store_state5 : BOOLEAN;
    signal ap_enable_operation_275 : BOOLEAN;
    signal ap_predicate_op230_store_state4 : BOOLEAN;
    signal ap_enable_operation_230 : BOOLEAN;
    signal ap_enable_operation_218 : BOOLEAN;
    signal ap_enable_operation_261 : BOOLEAN;
    signal ap_predicate_op276_store_state5 : BOOLEAN;
    signal ap_enable_operation_276 : BOOLEAN;
    signal ap_predicate_op232_store_state4 : BOOLEAN;
    signal ap_enable_operation_232 : BOOLEAN;
    signal ap_enable_operation_216 : BOOLEAN;
    signal ap_enable_operation_258 : BOOLEAN;
    signal ap_predicate_op277_store_state5 : BOOLEAN;
    signal ap_enable_operation_277 : BOOLEAN;
    signal ap_predicate_op234_store_state4 : BOOLEAN;
    signal ap_enable_operation_234 : BOOLEAN;
    signal ap_enable_operation_213 : BOOLEAN;
    signal ap_enable_operation_255 : BOOLEAN;
    signal ap_predicate_op237_store_state4 : BOOLEAN;
    signal ap_enable_operation_237 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_2057_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2065_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2065_p20 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2074_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2074_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2082_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2090_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2090_p20 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2098_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2106_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2120_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2140_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2140_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2148_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2148_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2157_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2157_p20 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2166_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2174_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2182_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2182_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2191_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2199_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2199_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_10_fu_2114_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_13_fu_2128_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1118_14_fu_2134_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_16_fu_1760_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_7_fu_1724_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln703_1_fu_1643_p10 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln703_fu_1607_p10 : STD_LOGIC_VECTOR (16 downto 0);

    component filter_mux_53_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter_mac_muladdg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component filter_mac_muladdhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component filter_mac_muladdibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_mac_muladdjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mac_muladdkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mac_muladdlbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component filter_mul_mul_13mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mul_mul_11ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_mul_mul_12ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_am_addmul_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component filter_mac_muladdqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_mac_muladdrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component filter_mac_muladdsc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mac_muladdtde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_ama_addmuludo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component Filter2D_k_buf_0_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_5_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_6_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_6_address0,
        ce0 => k_buf_0_val_6_ce0,
        we0 => k_buf_0_val_6_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_6_q0,
        address1 => k_buf_0_val_6_address1,
        ce1 => k_buf_0_val_6_ce1,
        we1 => k_buf_0_val_6_we1,
        d1 => k_buf_0_val_5_q0);

    k_buf_0_val_7_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_7_address0,
        ce0 => k_buf_0_val_7_ce0,
        we0 => k_buf_0_val_7_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_7_q0,
        address1 => k_buf_0_val_7_address1,
        ce1 => k_buf_0_val_7_ce1,
        we1 => k_buf_0_val_7_we1,
        d1 => k_buf_0_val_6_q0);

    k_buf_0_val_8_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_8_address0,
        ce0 => k_buf_0_val_8_ce0,
        we0 => k_buf_0_val_8_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_8_q0,
        address1 => k_buf_0_val_8_address1,
        ce1 => k_buf_0_val_8_ce1,
        we1 => k_buf_0_val_8_we1,
        d1 => k_buf_0_val_7_q0);

    k_buf_0_val_9_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_9_address0,
        ce0 => k_buf_0_val_9_ce0,
        we0 => k_buf_0_val_9_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_9_q0,
        address1 => k_buf_0_val_9_address1,
        ce1 => k_buf_0_val_9_ce1,
        we1 => k_buf_0_val_9_we1,
        d1 => k_buf_0_val_8_q0);

    filter_mux_53_8_1_1_U18 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => ap_sig_allocacmp_right_border_buf_0_18,
        din1 => right_border_buf_0_13_fu_298,
        din2 => right_border_buf_0_9_fu_282,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => sub_ln493_5_fu_1249_p2,
        dout => tmp_8_fu_1253_p7);

    filter_mux_53_8_1_1_U19 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => ap_sig_allocacmp_right_border_buf_0_16,
        din1 => right_border_buf_0_4_fu_262,
        din2 => right_border_buf_0_3_fu_258,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => sub_ln493_5_fu_1249_p2,
        dout => tmp_9_fu_1269_p7);

    filter_mux_53_8_1_1_U20 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_246,
        din1 => right_border_buf_0_1_fu_250,
        din2 => right_border_buf_0_2_fu_254,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => sub_ln493_5_reg_2610,
        dout => tmp_5_fu_1332_p7);

    filter_mux_53_8_1_1_U21 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_266,
        din1 => right_border_buf_0_6_fu_270,
        din2 => right_border_buf_0_7_fu_274,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => sub_ln493_5_reg_2610,
        dout => tmp_6_fu_1354_p7);

    filter_mux_53_8_1_1_U22 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_10_fu_286,
        din1 => right_border_buf_0_11_fu_290,
        din2 => right_border_buf_0_12_fu_294,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => sub_ln493_5_reg_2610,
        dout => tmp_7_fu_1376_p7);

    filter_mux_53_8_1_1_U23 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1347_p3,
        din1 => col_buf_0_val_1_0_fu_1369_p3,
        din2 => col_buf_0_val_2_0_fu_1391_p3,
        din3 => col_buf_0_val_3_0_fu_1398_p3,
        din4 => col_buf_0_val_4_0_fu_1404_p3,
        din5 => sub_ln493_reg_2544,
        dout => tmp_2_fu_1483_p7);

    filter_mux_53_8_1_1_U24 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1347_p3,
        din1 => col_buf_0_val_1_0_fu_1369_p3,
        din2 => col_buf_0_val_2_0_fu_1391_p3,
        din3 => col_buf_0_val_3_0_fu_1398_p3,
        din4 => col_buf_0_val_4_0_fu_1404_p3,
        din5 => sub_ln493_1_reg_2549,
        dout => tmp_10_fu_1505_p7);

    filter_mux_53_8_1_1_U25 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1347_p3,
        din1 => col_buf_0_val_1_0_fu_1369_p3,
        din2 => col_buf_0_val_2_0_fu_1391_p3,
        din3 => col_buf_0_val_3_0_fu_1398_p3,
        din4 => col_buf_0_val_4_0_fu_1404_p3,
        din5 => sub_ln493_2_reg_2554,
        dout => tmp_11_fu_1527_p7);

    filter_mux_53_8_1_1_U26 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1347_p3,
        din1 => col_buf_0_val_1_0_fu_1369_p3,
        din2 => col_buf_0_val_2_0_fu_1391_p3,
        din3 => col_buf_0_val_3_0_fu_1398_p3,
        din4 => col_buf_0_val_4_0_fu_1404_p3,
        din5 => sub_ln493_3_reg_2559,
        dout => tmp_12_fu_1549_p7);

    filter_mux_53_8_1_1_U27 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1347_p3,
        din1 => col_buf_0_val_1_0_fu_1369_p3,
        din2 => col_buf_0_val_2_0_fu_1391_p3,
        din3 => col_buf_0_val_3_0_fu_1398_p3,
        din4 => col_buf_0_val_4_0_fu_1404_p3,
        din5 => sub_ln493_4_reg_2564,
        dout => tmp_13_fu_1571_p7);

    filter_mac_muladdg8j_U28 : component filter_mac_muladdg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_2057_p0,
        din1 => grp_fu_2057_p1,
        din2 => grp_fu_2057_p2,
        dout => grp_fu_2057_p3);

    filter_mac_muladdhbi_U29 : component filter_mac_muladdhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2065_p0,
        din1 => grp_fu_2065_p1,
        din2 => grp_fu_2065_p2,
        dout => grp_fu_2065_p3);

    filter_mac_muladdibs_U30 : component filter_mac_muladdibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_2074_p0,
        din1 => grp_fu_2074_p1,
        din2 => grp_fu_2074_p2,
        dout => grp_fu_2074_p3);

    filter_mac_muladdg8j_U31 : component filter_mac_muladdg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_2082_p0,
        din1 => grp_fu_2082_p1,
        din2 => grp_fu_2082_p2,
        dout => grp_fu_2082_p3);

    filter_mac_muladdjbC_U32 : component filter_mac_muladdjbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_2090_p0,
        din1 => grp_fu_2090_p1,
        din2 => grp_fu_2090_p2,
        dout => grp_fu_2090_p3);

    filter_mac_muladdkbM_U33 : component filter_mac_muladdkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_2098_p0,
        din1 => grp_fu_2098_p1,
        din2 => grp_fu_2090_p3,
        dout => grp_fu_2098_p3);

    filter_mac_muladdlbW_U34 : component filter_mac_muladdlbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2106_p0,
        din1 => grp_fu_2106_p1,
        din2 => grp_fu_2106_p2,
        dout => grp_fu_2106_p3);

    filter_mul_mul_13mb6_U35 : component filter_mul_mul_13mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 8,
        dout_WIDTH => 20)
    port map (
        din0 => mul_ln1118_10_fu_2114_p0,
        din1 => mul_ln1118_10_fu_2114_p1,
        dout => mul_ln1118_10_fu_2114_p2);

    filter_mac_muladdlbW_U36 : component filter_mac_muladdlbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2120_p0,
        din1 => grp_fu_2120_p1,
        din2 => grp_fu_2120_p2,
        dout => grp_fu_2120_p3);

    filter_mul_mul_11ncg_U37 : component filter_mul_mul_11ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 19)
    port map (
        din0 => mul_ln1118_13_fu_2128_p0,
        din1 => mul_ln1118_13_fu_2128_p1,
        dout => mul_ln1118_13_fu_2128_p2);

    filter_mul_mul_12ocq_U38 : component filter_mul_mul_12ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 20)
    port map (
        din0 => mul_ln1118_14_fu_2134_p0,
        din1 => mul_ln1118_14_fu_2134_p1,
        dout => mul_ln1118_14_fu_2134_p2);

    filter_am_addmul_pcA_U39 : component filter_am_addmul_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2140_p0,
        din1 => grp_fu_2140_p1,
        din2 => grp_fu_2140_p2,
        dout => grp_fu_2140_p3);

    filter_mac_muladdqcK_U40 : component filter_mac_muladdqcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_2148_p0,
        din1 => grp_fu_2148_p1,
        din2 => grp_fu_2148_p2,
        dout => grp_fu_2148_p3);

    filter_mac_muladdrcU_U41 : component filter_mac_muladdrcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_2157_p0,
        din1 => grp_fu_2157_p1,
        din2 => grp_fu_2157_p2,
        dout => grp_fu_2157_p3);

    filter_mac_muladdkbM_U42 : component filter_mac_muladdkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_2166_p0,
        din1 => grp_fu_2166_p1,
        din2 => mul_ln1118_10_reg_2706,
        dout => grp_fu_2166_p3);

    filter_mac_muladdsc4_U43 : component filter_mac_muladdsc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_2174_p0,
        din1 => grp_fu_2174_p1,
        din2 => mul_ln1118_14_reg_2716,
        dout => grp_fu_2174_p3);

    filter_mac_muladdibs_U44 : component filter_mac_muladdibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_2182_p0,
        din1 => grp_fu_2182_p1,
        din2 => grp_fu_2182_p2,
        dout => grp_fu_2182_p3);

    filter_mac_muladdtde_U45 : component filter_mac_muladdtde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 19,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_2191_p0,
        din1 => grp_fu_2191_p1,
        din2 => mul_ln1118_13_reg_2711,
        dout => grp_fu_2191_p3);

    filter_ama_addmuludo_U46 : component filter_ama_addmuludo
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2199_p0,
        din1 => grp_fu_2199_p1,
        din2 => grp_fu_2199_p2,
        din3 => mul_ln703_2_reg_2726,
        dout => grp_fu_2199_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln444_fu_1085_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((icmp_ln443_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_3_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_1085_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_3_reg_453 <= j_V_fu_1090_p2;
            elsif (((icmp_ln443_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_3_reg_453 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                t_V_reg_442 <= i_V_reg_2504;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_442 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    add_ln147_1_reg_2481(2 downto 1) <= add_ln147_1_fu_526_p2(2 downto 1);
                add_ln458_reg_2495 <= add_ln458_fu_554_p2;
                add_ln507_reg_2472 <= add_ln507_fu_520_p2;
                p_src_cols_V_read_cas_reg_2440 <= p_src_cols_V_read_cas_fu_464_p1;
                p_src_rows_V_read_cas_reg_2446 <= p_src_rows_V_read_cas_fu_468_p1;
                    sext_ln147_1_reg_2490(31 downto 1) <= sext_ln147_1_fu_550_p1(31 downto 1);
                sext_ln443_1_reg_2462 <= sext_ln443_1_fu_482_p1;
                sext_ln443_3_reg_2467 <= sext_ln443_3_fu_496_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_12_reg_2731 <= add_ln703_12_fu_1847_p2;
                add_ln703_15_reg_2736 <= add_ln703_15_fu_1856_p2;
                add_ln703_22_reg_2741 <= add_ln703_22_fu_1867_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_17_reg_2721 <= grp_fu_2120_p3;
                add_ln703_6_reg_2696 <= grp_fu_2098_p3;
                add_ln703_8_reg_2701 <= grp_fu_2106_p3;
                mul_ln703_2_reg_2726 <= grp_fu_2140_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_2_reg_2686 <= grp_fu_2074_p3;
                add_ln703_3_reg_2691 <= grp_fu_2082_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_reg_2681 <= grp_fu_2057_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_1085_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_2578 <= and_ln118_fu_1137_p2;
                and_ln512_reg_2601 <= and_ln512_fu_1218_p2;
                or_ln457_reg_2592 <= or_ln457_fu_1213_p2;
                trunc_ln458_1_reg_2587 <= trunc_ln458_1_fu_1209_p1;
                x_reg_2582 <= x_fu_1201_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_2578_pp0_iter1_reg <= and_ln118_reg_2578;
                and_ln512_reg_2601_pp0_iter1_reg <= and_ln512_reg_2601;
                icmp_ln444_reg_2569 <= icmp_ln444_fu_1085_p2;
                icmp_ln444_reg_2569_pp0_iter1_reg <= icmp_ln444_reg_2569;
                or_ln457_reg_2592_pp0_iter1_reg <= or_ln457_reg_2592;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_2601_pp0_iter2_reg <= and_ln512_reg_2601_pp0_iter1_reg;
                and_ln512_reg_2601_pp0_iter3_reg <= and_ln512_reg_2601_pp0_iter2_reg;
                and_ln512_reg_2601_pp0_iter4_reg <= and_ln512_reg_2601_pp0_iter3_reg;
                and_ln512_reg_2601_pp0_iter5_reg <= and_ln512_reg_2601_pp0_iter4_reg;
                and_ln512_reg_2601_pp0_iter6_reg <= and_ln512_reg_2601_pp0_iter5_reg;
                icmp_ln444_reg_2569_pp0_iter2_reg <= icmp_ln444_reg_2569_pp0_iter1_reg;
                icmp_ln444_reg_2569_pp0_iter3_reg <= icmp_ln444_reg_2569_pp0_iter2_reg;
                icmp_ln444_reg_2569_pp0_iter4_reg <= icmp_ln444_reg_2569_pp0_iter3_reg;
                src_kernel_win_0_va_20_reg_2651 <= src_kernel_win_0_va_20_fu_1498_p3;
                src_kernel_win_0_va_20_reg_2651_pp0_iter3_reg <= src_kernel_win_0_va_20_reg_2651;
                src_kernel_win_0_va_20_reg_2651_pp0_iter4_reg <= src_kernel_win_0_va_20_reg_2651_pp0_iter3_reg;
                src_kernel_win_0_va_21_reg_2657 <= src_kernel_win_0_va_21_fu_1520_p3;
                src_kernel_win_0_va_21_reg_2657_pp0_iter3_reg <= src_kernel_win_0_va_21_reg_2657;
                src_kernel_win_0_va_21_reg_2657_pp0_iter4_reg <= src_kernel_win_0_va_21_reg_2657_pp0_iter3_reg;
                src_kernel_win_0_va_22_reg_2663 <= src_kernel_win_0_va_22_fu_1542_p3;
                src_kernel_win_0_va_22_reg_2663_pp0_iter3_reg <= src_kernel_win_0_va_22_reg_2663;
                src_kernel_win_0_va_22_reg_2663_pp0_iter4_reg <= src_kernel_win_0_va_22_reg_2663_pp0_iter3_reg;
                src_kernel_win_0_va_23_reg_2669 <= src_kernel_win_0_va_23_fu_1564_p3;
                src_kernel_win_0_va_23_reg_2669_pp0_iter3_reg <= src_kernel_win_0_va_23_reg_2669;
                src_kernel_win_0_va_23_reg_2669_pp0_iter4_reg <= src_kernel_win_0_va_23_reg_2669_pp0_iter3_reg;
                src_kernel_win_0_va_24_reg_2675 <= src_kernel_win_0_va_24_fu_1586_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_2504 <= i_V_fu_565_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_560_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_1_reg_2527 <= icmp_ln879_1_fu_594_p2;
                icmp_ln879_2_reg_2531 <= icmp_ln879_2_fu_600_p2;
                icmp_ln879_reg_2523 <= icmp_ln879_fu_588_p2;
                icmp_ln887_reg_2509 <= icmp_ln887_fu_571_p2;
                icmp_ln899_1_reg_2535 <= icmp_ln899_1_fu_606_p2;
                icmp_ln899_reg_2518 <= icmp_ln899_fu_582_p2;
                sub_ln493_1_reg_2549 <= sub_ln493_1_fu_984_p2;
                sub_ln493_2_reg_2554 <= sub_ln493_2_fu_1016_p2;
                sub_ln493_3_reg_2559 <= sub_ln493_3_fu_1048_p2;
                sub_ln493_4_reg_2564 <= sub_ln493_4_fu_1080_p2;
                sub_ln493_reg_2544 <= sub_ln493_fu_952_p2;
                xor_ln457_reg_2513 <= xor_ln457_fu_576_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_6_addr_reg_2617 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
                k_buf_0_val_7_addr_reg_2623 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
                k_buf_0_val_8_addr_reg_2629 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
                k_buf_0_val_9_addr_reg_2640 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
                sub_ln493_5_reg_2610 <= sub_ln493_5_fu_1249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln1118_10_reg_2706 <= mul_ln1118_10_fu_2114_p2;
                mul_ln1118_13_reg_2711 <= mul_ln1118_13_fu_2128_p2;
                mul_ln1118_14_reg_2716 <= mul_ln1118_14_fu_2134_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter5_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_reg_2746 <= p_Val2_4_fu_2049_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_10_fu_286 <= col_buf_0_val_2_0_fu_1391_p3;
                right_border_buf_0_11_fu_290 <= right_border_buf_0_10_fu_286;
                right_border_buf_0_12_fu_294 <= right_border_buf_0_11_fu_290;
                right_border_buf_0_14_fu_302 <= col_buf_0_val_3_0_fu_1398_p3;
                right_border_buf_0_1_fu_250 <= right_border_buf_0_s_fu_246;
                right_border_buf_0_2_fu_254 <= right_border_buf_0_1_fu_250;
                right_border_buf_0_5_fu_266 <= col_buf_0_val_1_0_fu_1369_p3;
                right_border_buf_0_6_fu_270 <= right_border_buf_0_5_fu_266;
                right_border_buf_0_7_fu_274 <= right_border_buf_0_6_fu_270;
                right_border_buf_0_8_fu_278 <= col_buf_0_val_4_0_fu_1404_p3;
                right_border_buf_0_s_fu_246 <= col_buf_0_val_0_0_fu_1347_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_13_fu_298 <= ap_sig_allocacmp_right_border_buf_0_18;
                right_border_buf_0_3_fu_258 <= right_border_buf_0_4_fu_262;
                right_border_buf_0_4_fu_262 <= ap_sig_allocacmp_right_border_buf_0_16;
                right_border_buf_0_9_fu_282 <= right_border_buf_0_13_fu_298;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_10_fu_206 <= src_kernel_win_0_va_9_fu_202;
                src_kernel_win_0_va_11_fu_210 <= src_kernel_win_0_va_10_fu_206;
                src_kernel_win_0_va_12_fu_214 <= src_kernel_win_0_va_23_reg_2669_pp0_iter4_reg;
                src_kernel_win_0_va_13_fu_218 <= src_kernel_win_0_va_12_fu_214;
                src_kernel_win_0_va_14_fu_222 <= src_kernel_win_0_va_13_fu_218;
                src_kernel_win_0_va_1_fu_170 <= src_kernel_win_0_va_fu_166;
                src_kernel_win_0_va_2_fu_174 <= src_kernel_win_0_va_1_fu_170;
                src_kernel_win_0_va_3_fu_178 <= src_kernel_win_0_va_2_fu_174;
                src_kernel_win_0_va_4_fu_182 <= src_kernel_win_0_va_21_reg_2657_pp0_iter4_reg;
                src_kernel_win_0_va_5_fu_186 <= src_kernel_win_0_va_4_fu_182;
                src_kernel_win_0_va_6_fu_190 <= src_kernel_win_0_va_5_fu_186;
                src_kernel_win_0_va_7_fu_194 <= src_kernel_win_0_va_6_fu_190;
                src_kernel_win_0_va_8_fu_198 <= src_kernel_win_0_va_22_reg_2663_pp0_iter4_reg;
                src_kernel_win_0_va_9_fu_202 <= src_kernel_win_0_va_8_fu_198;
                src_kernel_win_0_va_fu_166 <= src_kernel_win_0_va_20_reg_2651_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2569_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_15_fu_226 <= ap_sig_allocacmp_src_kernel_win_0_va_56;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2569_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_fu_230 <= src_kernel_win_0_va_24_reg_2675;
                src_kernel_win_0_va_17_fu_234 <= src_kernel_win_0_va_16_fu_230;
                src_kernel_win_0_va_18_fu_238 <= src_kernel_win_0_va_17_fu_234;
                src_kernel_win_0_va_19_fu_242 <= src_kernel_win_0_va_18_fu_238;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln457_reg_2592 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_8_reg_2635 <= tmp_8_fu_1253_p7;
                tmp_9_reg_2646 <= tmp_9_fu_1269_p7;
            end if;
        end if;
    end process;
    add_ln147_1_reg_2481(0) <= '0';
    sext_ln147_1_reg_2490(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, icmp_ln443_fu_560_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_560_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_1112_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_3_reg_453));
    add_ln118_1_fu_970_p2 <= std_logic_vector(signed(ap_const_lv3_6) + signed(trunc_ln506_1_fu_611_p1));
    add_ln118_2_fu_1002_p2 <= std_logic_vector(signed(ap_const_lv3_5) + signed(trunc_ln506_1_fu_611_p1));
    add_ln118_3_fu_1066_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(trunc_ln506_1_fu_611_p1));
    add_ln118_fu_938_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(trunc_ln506_1_fu_611_p1));
    add_ln147_1_fu_526_p2 <= std_logic_vector(signed(ap_const_lv3_6) + signed(shl_ln147_1_fu_512_p3));
    add_ln147_fu_544_p2 <= std_logic_vector(signed(ap_const_lv13_1FFE) + signed(sext_ln147_fu_540_p1));
    add_ln443_1_fu_490_p2 <= std_logic_vector(unsigned(ap_const_lv11_3) + unsigned(sext_ln443_2_fu_486_p1));
    add_ln443_fu_476_p2 <= std_logic_vector(unsigned(ap_const_lv12_4) + unsigned(sext_ln443_fu_472_p1));
    add_ln458_fu_554_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(trunc_ln458_fu_504_p1));
    add_ln506_1_fu_677_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_442));
    add_ln506_2_fu_739_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_442));
    add_ln506_3_fu_801_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFC) + signed(t_V_reg_442));
    add_ln506_4_fu_863_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFB) + signed(t_V_reg_442));
    add_ln506_fu_615_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_442));
    add_ln507_fu_520_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(trunc_ln506_fu_500_p1));
    add_ln703_10_fu_1812_p2 <= std_logic_vector(unsigned(zext_ln703_11_fu_1809_p1) + unsigned(grp_fu_2157_p3));
    add_ln703_12_fu_1847_p2 <= std_logic_vector(unsigned(zext_ln703_13_fu_1844_p1) + unsigned(zext_ln703_12_fu_1817_p1));
    add_ln703_15_fu_1856_p2 <= std_logic_vector(unsigned(zext_ln703_14_fu_1853_p1) + unsigned(grp_fu_2174_p3));
    add_ln703_16_fu_1979_p2 <= std_logic_vector(unsigned(zext_ln703_15_fu_1976_p1) + unsigned(add_ln703_12_reg_2731));
    add_ln703_22_fu_1867_p2 <= std_logic_vector(unsigned(zext_ln703_18_fu_1864_p1) + unsigned(grp_fu_2182_p3));
    add_ln703_4_fu_1704_p2 <= std_logic_vector(unsigned(zext_ln703_5_fu_1701_p1) + unsigned(add_ln703_2_reg_2686));
    and_ln118_1_fu_640_p2 <= (xor_ln118_2_fu_629_p2 and icmp_ln118_fu_635_p2);
    and_ln118_2_fu_702_p2 <= (xor_ln118_3_fu_691_p2 and icmp_ln118_2_fu_697_p2);
    and_ln118_3_fu_764_p2 <= (xor_ln118_4_fu_753_p2 and icmp_ln118_3_fu_759_p2);
    and_ln118_4_fu_826_p2 <= (xor_ln118_5_fu_815_p2 and icmp_ln118_4_fu_821_p2);
    and_ln118_5_fu_888_p2 <= (xor_ln118_6_fu_877_p2 and icmp_ln118_5_fu_883_p2);
    and_ln118_fu_1137_p2 <= (xor_ln118_7_fu_1126_p2 and icmp_ln118_1_fu_1132_p2);
    and_ln144_fu_1195_p2 <= (or_ln118_fu_1189_p2 and icmp_ln144_fu_1165_p2);
    and_ln512_fu_1218_p2 <= (icmp_ln899_reg_2518 and icmp_ln891_fu_1106_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, and_ln512_reg_2601_pp0_iter6_reg, ap_predicate_op225_read_state4, ap_predicate_op236_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op236_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op225_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, and_ln512_reg_2601_pp0_iter6_reg, ap_predicate_op225_read_state4, ap_predicate_op236_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op236_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op225_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, and_ln512_reg_2601_pp0_iter6_reg, ap_predicate_op225_read_state4, ap_predicate_op236_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op236_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op225_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state10_pp0_stage0_iter7_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_2601_pp0_iter6_reg)
    begin
                ap_block_state10_pp0_stage0_iter7 <= ((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op225_read_state4, ap_predicate_op236_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op236_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op225_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln443_fu_560_p2, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln443_fu_560_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_213_assign_proc : process(icmp_ln444_reg_2569)
    begin
                ap_enable_operation_213 <= (icmp_ln444_reg_2569 = ap_const_lv1_0);
    end process;


    ap_enable_operation_216_assign_proc : process(icmp_ln444_reg_2569)
    begin
                ap_enable_operation_216 <= (icmp_ln444_reg_2569 = ap_const_lv1_0);
    end process;


    ap_enable_operation_218_assign_proc : process(icmp_ln444_reg_2569)
    begin
                ap_enable_operation_218 <= (icmp_ln444_reg_2569 = ap_const_lv1_0);
    end process;


    ap_enable_operation_220_assign_proc : process(icmp_ln444_reg_2569)
    begin
                ap_enable_operation_220 <= (icmp_ln444_reg_2569 = ap_const_lv1_0);
    end process;


    ap_enable_operation_223_assign_proc : process(ap_predicate_op223_load_state4)
    begin
                ap_enable_operation_223 <= (ap_predicate_op223_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_226_assign_proc : process(ap_predicate_op226_store_state4)
    begin
                ap_enable_operation_226 <= (ap_predicate_op226_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_228_assign_proc : process(ap_predicate_op228_store_state4)
    begin
                ap_enable_operation_228 <= (ap_predicate_op228_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_230_assign_proc : process(ap_predicate_op230_store_state4)
    begin
                ap_enable_operation_230 <= (ap_predicate_op230_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_232_assign_proc : process(ap_predicate_op232_store_state4)
    begin
                ap_enable_operation_232 <= (ap_predicate_op232_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_234_assign_proc : process(ap_predicate_op234_store_state4)
    begin
                ap_enable_operation_234 <= (ap_predicate_op234_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_237_assign_proc : process(ap_predicate_op237_store_state4)
    begin
                ap_enable_operation_237 <= (ap_predicate_op237_store_state4 = ap_const_boolean_1);
    end process;

        ap_enable_operation_255 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_258 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_261 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_264 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_266_assign_proc : process(or_ln457_reg_2592_pp0_iter1_reg)
    begin
                ap_enable_operation_266 <= (or_ln457_reg_2592_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_274_assign_proc : process(ap_predicate_op274_store_state5)
    begin
                ap_enable_operation_274 <= (ap_predicate_op274_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_275_assign_proc : process(ap_predicate_op275_store_state5)
    begin
                ap_enable_operation_275 <= (ap_predicate_op275_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_276_assign_proc : process(ap_predicate_op276_store_state5)
    begin
                ap_enable_operation_276 <= (ap_predicate_op276_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_277_assign_proc : process(ap_predicate_op277_store_state5)
    begin
                ap_enable_operation_277 <= (ap_predicate_op277_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op223_load_state4_assign_proc : process(icmp_ln444_reg_2569, or_ln457_reg_2592)
    begin
                ap_predicate_op223_load_state4 <= ((or_ln457_reg_2592 = ap_const_lv1_1) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op225_read_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518)
    begin
                ap_predicate_op225_read_state4 <= ((ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op226_store_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_reg_2523)
    begin
                ap_predicate_op226_store_state4 <= ((icmp_ln879_reg_2523 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op228_store_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_1_reg_2527)
    begin
                ap_predicate_op228_store_state4 <= ((icmp_ln879_1_reg_2527 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op230_store_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_2_reg_2531)
    begin
                ap_predicate_op230_store_state4 <= ((icmp_ln879_2_reg_2531 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op232_store_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_1_reg_2527)
    begin
                ap_predicate_op232_store_state4 <= ((icmp_ln879_1_reg_2527 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op234_store_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_reg_2523)
    begin
                ap_predicate_op234_store_state4 <= ((icmp_ln879_reg_2523 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op236_read_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln887_reg_2509)
    begin
                ap_predicate_op236_read_state4 <= ((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op237_store_state4_assign_proc : process(icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln887_reg_2509)
    begin
                ap_predicate_op237_store_state4 <= ((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln444_reg_2569 = ap_const_lv1_0));
    end process;


    ap_predicate_op274_store_state5_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, and_ln118_reg_2578_pp0_iter1_reg)
    begin
                ap_predicate_op274_store_state5 <= ((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg));
    end process;


    ap_predicate_op275_store_state5_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, and_ln118_reg_2578_pp0_iter1_reg)
    begin
                ap_predicate_op275_store_state5 <= ((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg));
    end process;


    ap_predicate_op276_store_state5_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, and_ln118_reg_2578_pp0_iter1_reg)
    begin
                ap_predicate_op276_store_state5 <= ((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg));
    end process;


    ap_predicate_op277_store_state5_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, and_ln118_reg_2578_pp0_iter1_reg)
    begin
                ap_predicate_op277_store_state5 <= ((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg));
    end process;


    ap_ready_assign_proc : process(icmp_ln443_fu_560_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_560_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_16_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_2518, icmp_ln887_reg_2509, and_ln118_reg_2578_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_8_fu_278, col_buf_0_val_4_0_fu_1404_p3)
    begin
        if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_16 <= col_buf_0_val_4_0_fu_1404_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_16 <= right_border_buf_0_8_fu_278;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_18_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_2518, icmp_ln887_reg_2509, and_ln118_reg_2578_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_14_fu_302, col_buf_0_val_3_0_fu_1398_p3)
    begin
        if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_18 <= col_buf_0_val_3_0_fu_1398_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_18 <= right_border_buf_0_14_fu_302;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_27_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_1_fu_170, src_kernel_win_0_va_2_fu_174)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_27 <= src_kernel_win_0_va_1_fu_170;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_27 <= src_kernel_win_0_va_2_fu_174;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_30_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_4_fu_182, src_kernel_win_0_va_5_fu_186)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_30 <= src_kernel_win_0_va_4_fu_182;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_30 <= src_kernel_win_0_va_5_fu_186;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_31_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_5_fu_186, src_kernel_win_0_va_6_fu_190)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_31 <= src_kernel_win_0_va_5_fu_186;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_31 <= src_kernel_win_0_va_6_fu_190;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_32_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_6_fu_190, src_kernel_win_0_va_7_fu_194)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_32 <= src_kernel_win_0_va_6_fu_190;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_32 <= src_kernel_win_0_va_7_fu_194;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_34_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_8_fu_198, src_kernel_win_0_va_9_fu_202)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_34 <= src_kernel_win_0_va_8_fu_198;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_34 <= src_kernel_win_0_va_9_fu_202;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_36_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_10_fu_206, src_kernel_win_0_va_11_fu_210)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_36 <= src_kernel_win_0_va_10_fu_206;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_36 <= src_kernel_win_0_va_11_fu_210;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_38_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_12_fu_214, src_kernel_win_0_va_13_fu_218)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_38 <= src_kernel_win_0_va_12_fu_214;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_38 <= src_kernel_win_0_va_13_fu_218;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_39_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_13_fu_218, src_kernel_win_0_va_14_fu_222)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_39 <= src_kernel_win_0_va_13_fu_218;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_39 <= src_kernel_win_0_va_14_fu_222;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_40_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter3_reg, ap_enable_reg_pp0_iter4, ap_sig_allocacmp_src_kernel_win_0_va_56, src_kernel_win_0_va_15_fu_226)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_40 <= ap_sig_allocacmp_src_kernel_win_0_va_56;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_40 <= src_kernel_win_0_va_15_fu_226;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_43_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter2_reg, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_17_fu_234, src_kernel_win_0_va_18_fu_238)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_43 <= src_kernel_win_0_va_17_fu_234;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_43 <= src_kernel_win_0_va_18_fu_238;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_44_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter2_reg, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_18_fu_238, src_kernel_win_0_va_19_fu_242)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_44 <= src_kernel_win_0_va_18_fu_238;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_44 <= src_kernel_win_0_va_19_fu_242;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_56_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2569_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_13_fu_218, src_kernel_win_0_va_14_fu_222)
    begin
        if (((icmp_ln444_reg_2569_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_56 <= src_kernel_win_0_va_13_fu_218;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_56 <= src_kernel_win_0_va_14_fu_222;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_1347_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_2592_pp0_iter1_reg(0) = '1') else 
        tmp_5_fu_1332_p7;
    col_buf_0_val_1_0_fu_1369_p3 <= 
        k_buf_0_val_6_q0 when (or_ln457_reg_2592_pp0_iter1_reg(0) = '1') else 
        tmp_6_fu_1354_p7;
    col_buf_0_val_2_0_fu_1391_p3 <= 
        k_buf_0_val_7_q0 when (or_ln457_reg_2592_pp0_iter1_reg(0) = '1') else 
        tmp_7_fu_1376_p7;
    col_buf_0_val_3_0_fu_1398_p3 <= 
        k_buf_0_val_8_q0 when (or_ln457_reg_2592_pp0_iter1_reg(0) = '1') else 
        tmp_8_reg_2635;
    col_buf_0_val_4_0_fu_1404_p3 <= 
        k_buf_0_val_9_q0 when (or_ln457_reg_2592_pp0_iter1_reg(0) = '1') else 
        tmp_9_reg_2646;
    deleted_zeros_fu_2043_p2 <= (xor_ln777_fu_2029_p2 or tmp_28_fu_2035_p3);
    grp_fu_2057_p0 <= ap_const_lv16_52(8 - 1 downto 0);
    grp_fu_2057_p1 <= grp_fu_2057_p10(8 - 1 downto 0);
    grp_fu_2057_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_44),16));
    grp_fu_2057_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv17_11B) * unsigned(mul_ln703_fu_1607_p1), 17));
    grp_fu_2065_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_2065_p1 <= grp_fu_2065_p10(8 - 1 downto 0);
    grp_fu_2065_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_17_fu_234),18));
    grp_fu_2065_p2 <= grp_fu_2065_p20(17 - 1 downto 0);
    grp_fu_2065_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_reg_2681),18));
    grp_fu_2074_p0 <= ap_const_lv18_11B(10 - 1 downto 0);
    grp_fu_2074_p1 <= grp_fu_2074_p10(8 - 1 downto 0);
    grp_fu_2074_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_16_fu_230),18));
    grp_fu_2074_p2 <= grp_fu_2074_p20(18 - 1 downto 0);
    grp_fu_2074_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2065_p3),19));
    grp_fu_2082_p0 <= ap_const_lv16_52(8 - 1 downto 0);
    grp_fu_2082_p1 <= grp_fu_2082_p10(8 - 1 downto 0);
    grp_fu_2082_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_2675),16));
    grp_fu_2082_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv17_11B) * unsigned(mul_ln703_1_fu_1643_p1), 17));
    grp_fu_2090_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    grp_fu_2090_p1 <= grp_fu_2090_p10(8 - 1 downto 0);
    grp_fu_2090_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_39),19));
    grp_fu_2090_p2 <= grp_fu_2090_p20(19 - 1 downto 0);
    grp_fu_2090_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_4_fu_1704_p2),20));
    grp_fu_2098_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    grp_fu_2098_p1 <= grp_fu_2098_p10(8 - 1 downto 0);
    grp_fu_2098_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_38),20));
    grp_fu_2106_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_2106_p1 <= grp_fu_2106_p10(8 - 1 downto 0);
    grp_fu_2106_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_36),18));
    grp_fu_2106_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv18_11B) * unsigned(mul_ln1118_7_fu_1724_p1), 18));
    grp_fu_2120_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_2120_p1 <= grp_fu_2120_p10(8 - 1 downto 0);
    grp_fu_2120_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_reg_2663_pp0_iter3_reg),18));
    grp_fu_2120_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv18_11B) * unsigned(mul_ln1118_16_fu_1760_p1), 18));
    grp_fu_2140_p0 <= grp_fu_2140_p00(8 - 1 downto 0);
    grp_fu_2140_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_reg_2657_pp0_iter3_reg),9));
    grp_fu_2140_p1 <= grp_fu_2140_p10(8 - 1 downto 0);
    grp_fu_2140_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_32),9));
    grp_fu_2140_p2 <= ap_const_lv18_11B(10 - 1 downto 0);
    grp_fu_2148_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    grp_fu_2148_p1 <= grp_fu_2148_p10(8 - 1 downto 0);
    grp_fu_2148_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_12_fu_214),19));
    grp_fu_2148_p2 <= grp_fu_2148_p20(18 - 1 downto 0);
    grp_fu_2148_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_8_reg_2701),19));
    grp_fu_2157_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    grp_fu_2157_p1 <= grp_fu_2157_p10(8 - 1 downto 0);
    grp_fu_2157_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_10_fu_206),20));
    grp_fu_2157_p2 <= grp_fu_2157_p20(20 - 1 downto 0);
    grp_fu_2157_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_6_reg_2696),21));
    grp_fu_2166_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    grp_fu_2166_p1 <= grp_fu_2166_p10(8 - 1 downto 0);
    grp_fu_2166_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_fu_198),20));
    grp_fu_2174_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    grp_fu_2174_p1 <= grp_fu_2174_p10(8 - 1 downto 0);
    grp_fu_2174_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_182),19));
    grp_fu_2182_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_2182_p1 <= grp_fu_2182_p10(8 - 1 downto 0);
    grp_fu_2182_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_170),18));
    grp_fu_2182_p2 <= grp_fu_2182_p20(18 - 1 downto 0);
    grp_fu_2182_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_17_reg_2721),19));
    grp_fu_2191_p0 <= ap_const_lv18_11B(10 - 1 downto 0);
    grp_fu_2191_p1 <= grp_fu_2191_p10(8 - 1 downto 0);
    grp_fu_2191_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_166),18));
    grp_fu_2199_p0 <= grp_fu_2199_p00(8 - 1 downto 0);
    grp_fu_2199_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_178),9));
    grp_fu_2199_p1 <= grp_fu_2199_p10(8 - 1 downto 0);
    grp_fu_2199_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_reg_2651_pp0_iter4_reg),9));
    grp_fu_2199_p2 <= ap_const_lv16_52(8 - 1 downto 0);
    i_V_fu_565_p2 <= std_logic_vector(unsigned(t_V_reg_442) + unsigned(ap_const_lv32_1));
    icmp_ln118_1_fu_1132_p2 <= "1" when (signed(ImagLoc_x_fu_1112_p2) < signed(p_src_cols_V_read_cas_reg_2440)) else "0";
    icmp_ln118_2_fu_697_p2 <= "1" when (signed(add_ln506_1_fu_677_p2) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln118_3_fu_759_p2 <= "1" when (signed(add_ln506_2_fu_739_p2) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln118_4_fu_821_p2 <= "1" when (signed(add_ln506_3_fu_801_p2) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln118_5_fu_883_p2 <= "1" when (signed(add_ln506_4_fu_863_p2) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln118_fu_635_p2 <= "1" when (signed(add_ln506_fu_615_p2) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln144_1_fu_668_p2 <= "1" when (signed(select_ln139_1_fu_660_p3) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln144_2_fu_730_p2 <= "1" when (signed(select_ln139_2_fu_722_p3) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln144_3_fu_792_p2 <= "1" when (signed(select_ln139_3_fu_784_p3) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln144_4_fu_854_p2 <= "1" when (signed(select_ln139_4_fu_846_p3) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln144_5_fu_916_p2 <= "1" when (signed(select_ln139_5_fu_908_p3) < signed(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln144_fu_1165_p2 <= "1" when (signed(select_ln139_fu_1157_p3) < signed(p_src_cols_V_read_cas_reg_2440)) else "0";
    icmp_ln443_fu_560_p2 <= "1" when (t_V_reg_442 = sext_ln443_3_reg_2467) else "0";
    icmp_ln444_fu_1085_p2 <= "1" when (t_V_3_reg_453 = sext_ln443_1_reg_2462) else "0";
    icmp_ln879_1_fu_594_p2 <= "1" when (t_V_reg_442 = ap_const_lv32_1) else "0";
    icmp_ln879_2_fu_600_p2 <= "1" when (t_V_reg_442 = ap_const_lv32_0) else "0";
    icmp_ln879_fu_588_p2 <= "1" when (t_V_reg_442 = ap_const_lv32_2) else "0";
    icmp_ln887_fu_571_p2 <= "1" when (unsigned(t_V_reg_442) < unsigned(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln891_fu_1106_p2 <= "0" when (tmp_21_fu_1096_p4 = ap_const_lv30_0) else "1";
    icmp_ln899_1_fu_606_p2 <= "1" when (unsigned(t_V_reg_442) > unsigned(p_src_rows_V_read_cas_reg_2446)) else "0";
    icmp_ln899_fu_582_p2 <= "1" when (unsigned(t_V_reg_442) > unsigned(ap_const_lv32_2)) else "0";
    j_V_fu_1090_p2 <= std_logic_vector(unsigned(t_V_3_reg_453) + unsigned(ap_const_lv32_1));
    k_buf_0_val_5_address0 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
    k_buf_0_val_5_address1 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_reg_2523, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_2523 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln887_reg_2509, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_6_address0 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
    k_buf_0_val_6_address1 <= k_buf_0_val_6_addr_reg_2617;

    k_buf_0_val_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_1_reg_2527, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_2527 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_we1_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, ap_block_pp0_stage0_11001, and_ln118_reg_2578_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_7_address0 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
    k_buf_0_val_7_address1 <= k_buf_0_val_7_addr_reg_2623;

    k_buf_0_val_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_2_reg_2531, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_2_reg_2531 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_we1_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, ap_block_pp0_stage0_11001, and_ln118_reg_2578_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_8_address0 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
    k_buf_0_val_8_address1 <= k_buf_0_val_8_addr_reg_2629;

    k_buf_0_val_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_1_reg_2527, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_2527 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_we1_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, ap_block_pp0_stage0_11001, and_ln118_reg_2578_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_9_address0 <= zext_ln835_fu_1241_p1(10 - 1 downto 0);
    k_buf_0_val_9_address1 <= k_buf_0_val_9_addr_reg_2640;

    k_buf_0_val_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_reg_2523, ap_block_pp0_stage0_11001, or_ln457_reg_2592)
    begin
        if ((((icmp_ln879_reg_2523 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_2592 = ap_const_lv1_1) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_9_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln879_reg_2523, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_2523 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_we1_assign_proc : process(icmp_ln899_reg_2518, icmp_ln887_reg_2509, ap_block_pp0_stage0_11001, and_ln118_reg_2578_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_10_fu_2114_p0 <= ap_const_lv20_8BD(13 - 1 downto 0);
    mul_ln1118_10_fu_2114_p1 <= mul_ln1118_10_fu_2114_p10(8 - 1 downto 0);
    mul_ln1118_10_fu_2114_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_34),20));
    mul_ln1118_13_fu_2128_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    mul_ln1118_13_fu_2128_p1 <= mul_ln1118_13_fu_2128_p10(8 - 1 downto 0);
    mul_ln1118_13_fu_2128_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_31),19));
    mul_ln1118_14_fu_2134_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    mul_ln1118_14_fu_2134_p1 <= mul_ln1118_14_fu_2134_p10(8 - 1 downto 0);
    mul_ln1118_14_fu_2134_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_30),20));
    mul_ln1118_16_fu_1760_p1 <= mul_ln1118_16_fu_1760_p10(8 - 1 downto 0);
    mul_ln1118_16_fu_1760_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_27),18));
    mul_ln1118_7_fu_1724_p1 <= mul_ln1118_7_fu_1724_p10(8 - 1 downto 0);
    mul_ln1118_7_fu_1724_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_reg_2669_pp0_iter3_reg),18));
    mul_ln703_1_fu_1643_p1 <= mul_ln703_1_fu_1643_p10(8 - 1 downto 0);
    mul_ln703_1_fu_1643_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_40),17));
    mul_ln703_fu_1607_p1 <= mul_ln703_fu_1607_p10(8 - 1 downto 0);
    mul_ln703_fu_1607_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_43),17));
    or_ln118_fu_1189_p2 <= (xor_ln118_8_fu_1183_p2 or tmp_22_fu_1118_p3);
    or_ln457_fu_1213_p2 <= (xor_ln457_reg_2513 or icmp_ln118_1_fu_1132_p2);
    p_Val2_1_fu_1993_p4 <= p_Val2_s_fu_1987_p2(21 downto 14);
    p_Val2_2_fu_2015_p2 <= std_logic_vector(unsigned(p_Val2_1_fu_1993_p4) + unsigned(zext_ln415_fu_2011_p1));
    p_Val2_4_fu_2049_p3 <= 
        p_Val2_2_fu_2015_p2 when (deleted_zeros_fu_2043_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_s_fu_1987_p2 <= std_logic_vector(unsigned(zext_ln703_19_fu_1984_p1) + unsigned(add_ln703_16_fu_1979_p2));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, and_ln512_reg_2601_pp0_iter6_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter6_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_4_reg_2746;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter7, and_ln512_reg_2601_pp0_iter6_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_2601_pp0_iter6_reg) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_src_cols_V_read_cas_fu_464_p0 <= p_src_cols_V_read;
        p_src_cols_V_read_cas_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_src_cols_V_read_cas_fu_464_p0),32));


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln444_reg_2569, and_ln118_reg_2578, icmp_ln899_reg_2518, icmp_ln887_reg_2509)
    begin
        if ((((icmp_ln887_reg_2509 = ap_const_lv1_1) and (icmp_ln899_reg_2518 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln118_reg_2578) and (icmp_ln899_reg_2518 = ap_const_lv1_0) and (icmp_ln444_reg_2569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op225_read_state4, ap_predicate_op236_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op236_read_state4 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op225_read_state4 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    p_src_rows_V_read_cas_fu_468_p0 <= p_src_rows_V_read;
        p_src_rows_V_read_cas_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_src_rows_V_read_cas_fu_468_p0),32));

    select_ln118_1_fu_976_p3 <= 
        add_ln118_1_fu_970_p2 when (and_ln118_2_fu_702_p2(0) = '1') else 
        select_ln144_1_fu_962_p3;
    select_ln118_2_fu_1008_p3 <= 
        add_ln118_2_fu_1002_p2 when (and_ln118_3_fu_764_p2(0) = '1') else 
        select_ln144_2_fu_994_p3;
    select_ln118_3_fu_1040_p3 <= 
        xor_ln118_1_fu_1034_p2 when (and_ln118_4_fu_826_p2(0) = '1') else 
        select_ln144_3_fu_1026_p3;
    select_ln118_4_fu_1072_p3 <= 
        add_ln118_3_fu_1066_p2 when (and_ln118_5_fu_888_p2(0) = '1') else 
        select_ln144_4_fu_1058_p3;
    select_ln118_5_fu_1175_p3 <= 
        ImagLoc_x_fu_1112_p2 when (and_ln118_fu_1137_p2(0) = '1') else 
        sub_ln147_fu_1170_p2;
    select_ln118_fu_944_p3 <= 
        add_ln118_fu_938_p2 when (and_ln118_1_fu_640_p2(0) = '1') else 
        select_ln144_fu_930_p3;
    select_ln139_1_fu_660_p3 <= 
        sub_ln142_fu_654_p2 when (tmp_3_fu_646_p3(0) = '1') else 
        add_ln506_fu_615_p2;
    select_ln139_2_fu_722_p3 <= 
        sub_ln142_1_fu_716_p2 when (tmp_14_fu_708_p3(0) = '1') else 
        add_ln506_1_fu_677_p2;
    select_ln139_3_fu_784_p3 <= 
        sub_ln142_2_fu_778_p2 when (tmp_16_fu_770_p3(0) = '1') else 
        add_ln506_2_fu_739_p2;
    select_ln139_4_fu_846_p3 <= 
        sub_ln142_3_fu_840_p2 when (tmp_18_fu_832_p3(0) = '1') else 
        add_ln506_3_fu_801_p2;
    select_ln139_5_fu_908_p3 <= 
        sub_ln142_4_fu_902_p2 when (tmp_20_fu_894_p3(0) = '1') else 
        add_ln506_4_fu_863_p2;
    select_ln139_fu_1157_p3 <= 
        sub_ln142_5_fu_1151_p2 when (tmp_23_fu_1143_p3(0) = '1') else 
        ImagLoc_x_fu_1112_p2;
    select_ln144_1_fu_962_p3 <= 
        trunc_ln147_2_fu_735_p1 when (icmp_ln144_2_fu_730_p2(0) = '1') else 
        sub_ln144_1_fu_957_p2;
    select_ln144_2_fu_994_p3 <= 
        trunc_ln147_3_fu_797_p1 when (icmp_ln144_3_fu_792_p2(0) = '1') else 
        sub_ln144_2_fu_989_p2;
    select_ln144_3_fu_1026_p3 <= 
        trunc_ln147_4_fu_859_p1 when (icmp_ln144_4_fu_854_p2(0) = '1') else 
        sub_ln144_3_fu_1021_p2;
    select_ln144_4_fu_1058_p3 <= 
        trunc_ln147_5_fu_921_p1 when (icmp_ln144_5_fu_916_p2(0) = '1') else 
        sub_ln144_4_fu_1053_p2;
    select_ln144_fu_930_p3 <= 
        trunc_ln147_1_fu_673_p1 when (icmp_ln144_1_fu_668_p2(0) = '1') else 
        sub_ln144_fu_925_p2;
        sext_ln147_1_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln147_fu_544_p2),32));

        sext_ln147_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_532_p3),13));

        sext_ln443_1_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_fu_476_p2),32));

    sext_ln443_2_fu_486_p0 <= p_src_rows_V_read;
        sext_ln443_2_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln443_2_fu_486_p0),11));

        sext_ln443_3_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_1_fu_490_p2),32));

    sext_ln443_fu_472_p0 <= p_src_cols_V_read;
        sext_ln443_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln443_fu_472_p0),12));

    shl_ln147_1_fu_512_p3 <= (trunc_ln147_fu_508_p1 & ap_const_lv1_0);
    shl_ln_fu_532_p1 <= p_src_cols_V_read;
    shl_ln_fu_532_p3 <= (shl_ln_fu_532_p1 & ap_const_lv1_0);
    src_kernel_win_0_va_20_fu_1498_p3 <= 
        tmp_2_fu_1483_p7 when (icmp_ln899_1_reg_2535(0) = '1') else 
        col_buf_0_val_0_0_fu_1347_p3;
    src_kernel_win_0_va_21_fu_1520_p3 <= 
        tmp_10_fu_1505_p7 when (icmp_ln899_1_reg_2535(0) = '1') else 
        col_buf_0_val_1_0_fu_1369_p3;
    src_kernel_win_0_va_22_fu_1542_p3 <= 
        tmp_11_fu_1527_p7 when (icmp_ln899_1_reg_2535(0) = '1') else 
        col_buf_0_val_2_0_fu_1391_p3;
    src_kernel_win_0_va_23_fu_1564_p3 <= 
        tmp_12_fu_1549_p7 when (icmp_ln899_1_reg_2535(0) = '1') else 
        col_buf_0_val_3_0_fu_1398_p3;
    src_kernel_win_0_va_24_fu_1586_p3 <= 
        tmp_13_fu_1571_p7 when (icmp_ln899_1_reg_2535(0) = '1') else 
        col_buf_0_val_4_0_fu_1404_p3;
    sub_ln142_1_fu_716_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) - unsigned(t_V_reg_442));
    sub_ln142_2_fu_778_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_442));
    sub_ln142_3_fu_840_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) - unsigned(t_V_reg_442));
    sub_ln142_4_fu_902_p2 <= std_logic_vector(unsigned(ap_const_lv32_5) - unsigned(t_V_reg_442));
    sub_ln142_5_fu_1151_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) - unsigned(t_V_3_reg_453));
    sub_ln142_fu_654_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_442));
    sub_ln144_1_fu_957_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_2481) - unsigned(trunc_ln147_2_fu_735_p1));
    sub_ln144_2_fu_989_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_2481) - unsigned(trunc_ln147_3_fu_797_p1));
    sub_ln144_3_fu_1021_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_2481) - unsigned(trunc_ln147_4_fu_859_p1));
    sub_ln144_4_fu_1053_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_2481) - unsigned(trunc_ln147_5_fu_921_p1));
    sub_ln144_fu_925_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_2481) - unsigned(trunc_ln147_1_fu_673_p1));
    sub_ln147_fu_1170_p2 <= std_logic_vector(signed(sext_ln147_1_reg_2490) - signed(select_ln139_fu_1157_p3));
    sub_ln493_1_fu_984_p2 <= std_logic_vector(unsigned(add_ln507_reg_2472) - unsigned(select_ln118_1_fu_976_p3));
    sub_ln493_2_fu_1016_p2 <= std_logic_vector(unsigned(add_ln507_reg_2472) - unsigned(select_ln118_2_fu_1008_p3));
    sub_ln493_3_fu_1048_p2 <= std_logic_vector(unsigned(add_ln507_reg_2472) - unsigned(select_ln118_3_fu_1040_p3));
    sub_ln493_4_fu_1080_p2 <= std_logic_vector(unsigned(add_ln507_reg_2472) - unsigned(select_ln118_4_fu_1072_p3));
    sub_ln493_5_fu_1249_p2 <= std_logic_vector(unsigned(add_ln458_reg_2495) - unsigned(trunc_ln458_1_reg_2587));
    sub_ln493_fu_952_p2 <= std_logic_vector(unsigned(add_ln507_reg_2472) - unsigned(select_ln118_fu_944_p3));
    tmp_14_fu_708_p3 <= add_ln506_1_fu_677_p2(31 downto 31);
    tmp_15_fu_745_p3 <= add_ln506_2_fu_739_p2(31 downto 31);
    tmp_16_fu_770_p3 <= add_ln506_2_fu_739_p2(31 downto 31);
    tmp_17_fu_807_p3 <= add_ln506_3_fu_801_p2(31 downto 31);
    tmp_18_fu_832_p3 <= add_ln506_3_fu_801_p2(31 downto 31);
    tmp_19_fu_869_p3 <= add_ln506_4_fu_863_p2(31 downto 31);
    tmp_20_fu_894_p3 <= add_ln506_4_fu_863_p2(31 downto 31);
    tmp_21_fu_1096_p4 <= t_V_3_reg_453(31 downto 2);
    tmp_22_fu_1118_p3 <= ImagLoc_x_fu_1112_p2(31 downto 31);
    tmp_23_fu_1143_p3 <= ImagLoc_x_fu_1112_p2(31 downto 31);
    tmp_26_fu_2003_p3 <= p_Val2_s_fu_1987_p2(13 downto 13);
    tmp_27_fu_2021_p3 <= p_Val2_s_fu_1987_p2(21 downto 21);
    tmp_28_fu_2035_p3 <= p_Val2_2_fu_2015_p2(7 downto 7);
    tmp_3_fu_646_p3 <= add_ln506_fu_615_p2(31 downto 31);
    tmp_4_fu_683_p3 <= add_ln506_1_fu_677_p2(31 downto 31);
    tmp_fu_621_p3 <= add_ln506_fu_615_p2(31 downto 31);
    trunc_ln147_1_fu_673_p1 <= select_ln139_1_fu_660_p3(3 - 1 downto 0);
    trunc_ln147_2_fu_735_p1 <= select_ln139_2_fu_722_p3(3 - 1 downto 0);
    trunc_ln147_3_fu_797_p1 <= select_ln139_3_fu_784_p3(3 - 1 downto 0);
    trunc_ln147_4_fu_859_p1 <= select_ln139_4_fu_846_p3(3 - 1 downto 0);
    trunc_ln147_5_fu_921_p1 <= select_ln139_5_fu_908_p3(3 - 1 downto 0);
    trunc_ln147_fu_508_p0 <= p_src_rows_V_read;
    trunc_ln147_fu_508_p1 <= trunc_ln147_fu_508_p0(2 - 1 downto 0);
    trunc_ln458_1_fu_1209_p1 <= x_fu_1201_p3(3 - 1 downto 0);
    trunc_ln458_fu_504_p0 <= p_src_cols_V_read;
    trunc_ln458_fu_504_p1 <= trunc_ln458_fu_504_p0(3 - 1 downto 0);
    trunc_ln506_1_fu_611_p1 <= t_V_reg_442(3 - 1 downto 0);
    trunc_ln506_fu_500_p0 <= p_src_rows_V_read;
    trunc_ln506_fu_500_p1 <= trunc_ln506_fu_500_p0(3 - 1 downto 0);
    x_fu_1201_p3 <= 
        select_ln139_fu_1157_p3 when (and_ln144_fu_1195_p2(0) = '1') else 
        select_ln118_5_fu_1175_p3;
    xor_ln118_1_fu_1034_p2 <= (trunc_ln506_1_fu_611_p1 xor ap_const_lv3_4);
    xor_ln118_2_fu_629_p2 <= (tmp_fu_621_p3 xor ap_const_lv1_1);
    xor_ln118_3_fu_691_p2 <= (tmp_4_fu_683_p3 xor ap_const_lv1_1);
    xor_ln118_4_fu_753_p2 <= (tmp_15_fu_745_p3 xor ap_const_lv1_1);
    xor_ln118_5_fu_815_p2 <= (tmp_17_fu_807_p3 xor ap_const_lv1_1);
    xor_ln118_6_fu_877_p2 <= (tmp_19_fu_869_p3 xor ap_const_lv1_1);
    xor_ln118_7_fu_1126_p2 <= (tmp_22_fu_1118_p3 xor ap_const_lv1_1);
    xor_ln118_8_fu_1183_p2 <= (icmp_ln118_1_fu_1132_p2 xor ap_const_lv1_1);
    xor_ln457_fu_576_p2 <= (icmp_ln887_fu_571_p2 xor ap_const_lv1_1);
    xor_ln777_fu_2029_p2 <= (tmp_27_fu_2021_p3 xor ap_const_lv1_1);
    zext_ln415_fu_2011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_2003_p3),8));
    zext_ln703_11_fu_1809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2148_p3),21));
    zext_ln703_12_fu_1817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_10_fu_1812_p2),22));
    zext_ln703_13_fu_1844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2166_p3),22));
    zext_ln703_14_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2191_p3),20));
    zext_ln703_15_fu_1976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_15_reg_2736),22));
    zext_ln703_18_fu_1864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2199_p4),19));
    zext_ln703_19_fu_1984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_22_reg_2741),22));
    zext_ln703_5_fu_1701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_3_reg_2691),19));
    zext_ln835_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_2582),64));
end behav;

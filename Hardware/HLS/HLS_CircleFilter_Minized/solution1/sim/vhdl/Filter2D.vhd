-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_1E3 : STD_LOGIC_VECTOR (8 downto 0) := "111100011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_1E0 : STD_LOGIC_VECTOR (9 downto 0) := "0111100000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv10_3FE : STD_LOGIC_VECTOR (9 downto 0) := "1111111110";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3FD : STD_LOGIC_VECTOR (9 downto 0) := "1111111101";
    constant ap_const_lv10_3FC : STD_LOGIC_VECTOR (9 downto 0) := "1111111100";
    constant ap_const_lv10_3FB : STD_LOGIC_VECTOR (9 downto 0) := "1111111011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv10_284 : STD_LOGIC_VECTOR (9 downto 0) := "1010000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_280 : STD_LOGIC_VECTOR (10 downto 0) := "01010000000";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_4FE : STD_LOGIC_VECTOR (10 downto 0) := "10011111110";
    constant ap_const_lv17_11B : STD_LOGIC_VECTOR (16 downto 0) := "00000000100011011";
    constant ap_const_lv18_11B : STD_LOGIC_VECTOR (17 downto 0) := "000000000100011011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_52 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001010010";
    constant ap_const_lv18_1AC : STD_LOGIC_VECTOR (17 downto 0) := "000000000110101100";
    constant ap_const_lv19_3D3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001111010011";
    constant ap_const_lv20_5C8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010111001000";
    constant ap_const_lv20_8BD : STD_LOGIC_VECTOR (19 downto 0) := "00000000100010111101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln444_reg_2351 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_2360 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_2300 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_2291 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal and_ln512_reg_2383 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2383_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_3_reg_445 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln443_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_466_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_V_reg_2286 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln887_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_2295 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2305 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_2309 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2313 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_reg_2317 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln493_1_fu_764_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_1_reg_2326 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_2_fu_786_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_2_reg_2331 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_3_fu_824_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_3_reg_2336 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_4_fu_862_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_4_reg_2341 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_5_fu_900_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_5_reg_2346 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln444_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op194_read_state4 : BOOLEAN;
    signal ap_predicate_op205_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_2351_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_2351_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_2351_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_2351_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_916_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_2360_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_1038_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_reg_2364 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln458_fu_1046_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln458_reg_2369 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln457_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_2374 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_2374_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2383_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2383_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2383_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2383_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_2383_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln493_fu_1090_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln493_reg_2392 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_buf_0_val_6_addr_reg_2399 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_7_addr_reg_2405 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_8_addr_reg_2411 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_1095_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_2417 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_addr_reg_2422 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_1111_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_reg_2428 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_1340_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2433 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2433_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2433_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_1362_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2439 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2439_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2439_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_1384_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2445 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2445_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2445_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_fu_1406_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2451 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2451_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2451_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_1428_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_2457 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1899_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_reg_2463 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_1916_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln703_2_reg_2468 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_1924_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_3_reg_2473 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1940_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln703_6_reg_2478 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal grp_fu_1948_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_8_reg_2483 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_10_fu_1956_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_10_reg_2488 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_13_fu_1970_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1118_13_reg_2493 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1118_14_fu_1976_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_14_reg_2498 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1962_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_17_reg_2503 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1982_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln703_2_reg_2508 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_12_fu_1689_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_12_reg_2513 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_15_fu_1698_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln703_15_fu_1698_p2 : signal is "no";
    signal add_ln703_15_reg_2518 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln703_22_fu_1709_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 of add_ln703_22_fu_1709_p2 : signal is "no";
    signal add_ln703_22_reg_2523 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_4_fu_1891_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_reg_2528 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_6_ce0 : STD_LOGIC;
    signal k_buf_0_val_6_we0 : STD_LOGIC;
    signal k_buf_0_val_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_6_ce1 : STD_LOGIC;
    signal k_buf_0_val_6_we1 : STD_LOGIC;
    signal k_buf_0_val_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_7_ce0 : STD_LOGIC;
    signal k_buf_0_val_7_we0 : STD_LOGIC;
    signal k_buf_0_val_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_7_ce1 : STD_LOGIC;
    signal k_buf_0_val_7_we1 : STD_LOGIC;
    signal k_buf_0_val_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_8_ce0 : STD_LOGIC;
    signal k_buf_0_val_8_we0 : STD_LOGIC;
    signal k_buf_0_val_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_8_ce1 : STD_LOGIC;
    signal k_buf_0_val_8_we1 : STD_LOGIC;
    signal k_buf_0_val_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_9_ce0 : STD_LOGIC;
    signal k_buf_0_val_9_we0 : STD_LOGIC;
    signal k_buf_0_val_9_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_9_ce1 : STD_LOGIC;
    signal k_buf_0_val_9_we1 : STD_LOGIC;
    signal t_V_reg_434 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln835_fu_1081_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_27 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_30 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_31 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_32 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_34 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_10_fu_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_11_fu_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_36 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_12_fu_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_13_fu_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_38 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_14_fu_226 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_39 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_56 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_15_fu_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_40 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_fu_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_17_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_242 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_43 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_246 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_src_kernel_win_0_va_44 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_1189_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_254 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_258 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_262 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1211_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_6_fu_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_7_fu_278 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_8_fu_282 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_4_0_fu_1246_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_9_fu_286 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_10_fu_290 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1233_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_11_fu_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_12_fu_298 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_13_fu_302 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_306 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_3_0_fu_1240_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_18 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln443_fu_456_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln506_fu_514_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln506_fu_518_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_530_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_2_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_fu_564_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln139_1_fu_570_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln507_fu_578_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln506_1_fu_594_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_606_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_2_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_3_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_1_fu_640_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln139_2_fu_646_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln507_1_fu_654_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln506_2_fu_670_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln506_3_fu_696_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln506_4_fu_722_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln144_1_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln507_fu_588_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_1_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln507_fu_524_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln507_fu_748_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln507_1_fu_756_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln144_2_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln507_1_fu_664_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_2_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln507_1_fu_600_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln507_2_fu_770_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln507_3_fu_778_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln142_fu_692_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln118_fu_798_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln118_fu_804_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_3_fu_808_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln118_fu_792_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_fu_816_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln142_1_fu_718_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_710_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln118_1_fu_836_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln118_1_fu_842_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_702_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_4_fu_846_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln118_1_fu_830_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_1_fu_854_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln142_2_fu_744_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_736_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln118_2_fu_874_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln118_2_fu_880_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_5_fu_884_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln118_1_fu_868_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_2_fu_892_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_fu_922_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln444_fu_906_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ImagLoc_x_fu_938_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_944_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_4_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_970_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_2_fu_978_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln139_fu_984_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln147_fu_1002_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln118_3_fu_1008_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln118_5_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln139_fu_992_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln118_fu_1016_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln891_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln144_fu_1078_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1174_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1196_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1218_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1325_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_1347_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1369_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1391_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1413_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln703_fu_1449_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1907_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln703_1_fu_1485_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_5_fu_1543_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln703_4_fu_1546_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 of add_ln703_4_fu_1546_p2 : signal is "no";
    signal mul_ln1118_7_fu_1566_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_16_fu_1602_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1990_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln703_11_fu_1651_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1999_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln703_10_fu_1654_p2 : STD_LOGIC_VECTOR (20 downto 0);
    attribute use_dsp48 of add_ln703_10_fu_1654_p2 : signal is "no";
    signal grp_fu_2008_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln703_13_fu_1686_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln703_12_fu_1659_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2033_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln703_14_fu_1695_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2016_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2041_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln703_18_fu_1706_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2024_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln703_15_fu_1818_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln703_19_fu_1826_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_16_fu_1821_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_s_fu_1829_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_27_fu_1845_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1835_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln415_fu_1853_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_1863_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1857_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_1877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln777_fu_1871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1899_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1899_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1899_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1907_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1907_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1907_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1916_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1916_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1916_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1924_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1924_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1924_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1932_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1932_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1932_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1940_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1940_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1932_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1948_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1948_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1948_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_10_fu_1956_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1118_10_fu_1956_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1962_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1962_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1962_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_13_fu_1970_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_13_fu_1970_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_14_fu_1976_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_14_fu_1976_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1982_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1982_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1982_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1990_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1990_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1990_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1999_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1999_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1999_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2008_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2008_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2016_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2016_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2024_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2024_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2024_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2033_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2033_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2041_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2041_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2041_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op195_store_state4 : BOOLEAN;
    signal ap_enable_operation_195 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op192_load_state4 : BOOLEAN;
    signal ap_enable_operation_192 : BOOLEAN;
    signal ap_enable_operation_235 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op243_store_state5 : BOOLEAN;
    signal ap_enable_operation_243 : BOOLEAN;
    signal ap_predicate_op197_store_state4 : BOOLEAN;
    signal ap_enable_operation_197 : BOOLEAN;
    signal ap_enable_operation_189 : BOOLEAN;
    signal ap_enable_operation_233 : BOOLEAN;
    signal ap_predicate_op244_store_state5 : BOOLEAN;
    signal ap_enable_operation_244 : BOOLEAN;
    signal ap_predicate_op199_store_state4 : BOOLEAN;
    signal ap_enable_operation_199 : BOOLEAN;
    signal ap_enable_operation_187 : BOOLEAN;
    signal ap_enable_operation_230 : BOOLEAN;
    signal ap_predicate_op245_store_state5 : BOOLEAN;
    signal ap_enable_operation_245 : BOOLEAN;
    signal ap_predicate_op201_store_state4 : BOOLEAN;
    signal ap_enable_operation_201 : BOOLEAN;
    signal ap_enable_operation_185 : BOOLEAN;
    signal ap_enable_operation_227 : BOOLEAN;
    signal ap_predicate_op246_store_state5 : BOOLEAN;
    signal ap_enable_operation_246 : BOOLEAN;
    signal ap_predicate_op203_store_state4 : BOOLEAN;
    signal ap_enable_operation_203 : BOOLEAN;
    signal ap_enable_operation_182 : BOOLEAN;
    signal ap_enable_operation_224 : BOOLEAN;
    signal ap_predicate_op206_store_state4 : BOOLEAN;
    signal ap_enable_operation_206 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1899_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1907_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1907_p20 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1916_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1916_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1924_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1932_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1932_p20 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1940_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1948_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1962_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1982_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1982_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1990_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1990_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1999_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1999_p20 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2008_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2016_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2024_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2024_p20 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2033_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2041_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2041_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_10_fu_1956_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_13_fu_1970_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1118_14_fu_1976_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_16_fu_1602_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_7_fu_1566_p10 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln703_1_fu_1485_p10 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln703_fu_1449_p10 : STD_LOGIC_VECTOR (16 downto 0);

    component filter_mux_53_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter_mac_muladdjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component filter_mac_muladdkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component filter_mac_muladdlbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_mac_muladdmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mac_muladdncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mac_muladdocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component filter_mul_mul_13pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mul_mul_11qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_mul_mul_12rcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_am_addmul_sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component filter_mac_muladdtde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_mac_muladdudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component filter_mac_muladdvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component filter_mac_muladdwdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component filter_ama_addmulxdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component Filter2D_k_buf_0_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_5_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_6_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_6_address0,
        ce0 => k_buf_0_val_6_ce0,
        we0 => k_buf_0_val_6_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_6_q0,
        address1 => k_buf_0_val_6_address1,
        ce1 => k_buf_0_val_6_ce1,
        we1 => k_buf_0_val_6_we1,
        d1 => k_buf_0_val_5_q0);

    k_buf_0_val_7_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_7_address0,
        ce0 => k_buf_0_val_7_ce0,
        we0 => k_buf_0_val_7_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_7_q0,
        address1 => k_buf_0_val_7_address1,
        ce1 => k_buf_0_val_7_ce1,
        we1 => k_buf_0_val_7_we1,
        d1 => k_buf_0_val_6_q0);

    k_buf_0_val_8_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_8_address0,
        ce0 => k_buf_0_val_8_ce0,
        we0 => k_buf_0_val_8_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_8_q0,
        address1 => k_buf_0_val_8_address1,
        ce1 => k_buf_0_val_8_ce1,
        we1 => k_buf_0_val_8_we1,
        d1 => k_buf_0_val_7_q0);

    k_buf_0_val_9_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_9_address0,
        ce0 => k_buf_0_val_9_ce0,
        we0 => k_buf_0_val_9_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_9_q0,
        address1 => k_buf_0_val_9_address1,
        ce1 => k_buf_0_val_9_ce1,
        we1 => k_buf_0_val_9_we1,
        d1 => k_buf_0_val_8_q0);

    filter_mux_53_8_1_1_U32 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => ap_sig_allocacmp_right_border_buf_0_18,
        din1 => right_border_buf_0_13_fu_302,
        din2 => right_border_buf_0_9_fu_286,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => xor_ln493_fu_1090_p2,
        dout => tmp_8_fu_1095_p7);

    filter_mux_53_8_1_1_U33 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => ap_sig_allocacmp_right_border_buf_0_16,
        din1 => right_border_buf_0_4_fu_266,
        din2 => right_border_buf_0_3_fu_262,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => xor_ln493_fu_1090_p2,
        dout => tmp_9_fu_1111_p7);

    filter_mux_53_8_1_1_U34 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_250,
        din1 => right_border_buf_0_1_fu_254,
        din2 => right_border_buf_0_2_fu_258,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => xor_ln493_reg_2392,
        dout => tmp_5_fu_1174_p7);

    filter_mux_53_8_1_1_U35 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_270,
        din1 => right_border_buf_0_6_fu_274,
        din2 => right_border_buf_0_7_fu_278,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => xor_ln493_reg_2392,
        dout => tmp_6_fu_1196_p7);

    filter_mux_53_8_1_1_U36 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_10_fu_290,
        din1 => right_border_buf_0_11_fu_294,
        din2 => right_border_buf_0_12_fu_298,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => xor_ln493_reg_2392,
        dout => tmp_7_fu_1218_p7);

    filter_mux_53_8_1_1_U37 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1189_p3,
        din1 => col_buf_0_val_1_0_fu_1211_p3,
        din2 => col_buf_0_val_2_0_fu_1233_p3,
        din3 => col_buf_0_val_3_0_fu_1240_p3,
        din4 => col_buf_0_val_4_0_fu_1246_p3,
        din5 => xor_ln493_1_reg_2326,
        dout => tmp_2_fu_1325_p7);

    filter_mux_53_8_1_1_U38 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1189_p3,
        din1 => col_buf_0_val_1_0_fu_1211_p3,
        din2 => col_buf_0_val_2_0_fu_1233_p3,
        din3 => col_buf_0_val_3_0_fu_1240_p3,
        din4 => col_buf_0_val_4_0_fu_1246_p3,
        din5 => xor_ln493_2_reg_2331,
        dout => tmp_3_fu_1347_p7);

    filter_mux_53_8_1_1_U39 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1189_p3,
        din1 => col_buf_0_val_1_0_fu_1211_p3,
        din2 => col_buf_0_val_2_0_fu_1233_p3,
        din3 => col_buf_0_val_3_0_fu_1240_p3,
        din4 => col_buf_0_val_4_0_fu_1246_p3,
        din5 => xor_ln493_3_reg_2336,
        dout => tmp_10_fu_1369_p7);

    filter_mux_53_8_1_1_U40 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1189_p3,
        din1 => col_buf_0_val_1_0_fu_1211_p3,
        din2 => col_buf_0_val_2_0_fu_1233_p3,
        din3 => col_buf_0_val_3_0_fu_1240_p3,
        din4 => col_buf_0_val_4_0_fu_1246_p3,
        din5 => xor_ln493_4_reg_2341,
        dout => tmp_11_fu_1391_p7);

    filter_mux_53_8_1_1_U41 : component filter_mux_53_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1189_p3,
        din1 => col_buf_0_val_1_0_fu_1211_p3,
        din2 => col_buf_0_val_2_0_fu_1233_p3,
        din3 => col_buf_0_val_3_0_fu_1240_p3,
        din4 => col_buf_0_val_4_0_fu_1246_p3,
        din5 => xor_ln493_5_reg_2346,
        dout => tmp_12_fu_1413_p7);

    filter_mac_muladdjbC_U42 : component filter_mac_muladdjbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_1899_p0,
        din1 => grp_fu_1899_p1,
        din2 => grp_fu_1899_p2,
        dout => grp_fu_1899_p3);

    filter_mac_muladdkbM_U43 : component filter_mac_muladdkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1907_p0,
        din1 => grp_fu_1907_p1,
        din2 => grp_fu_1907_p2,
        dout => grp_fu_1907_p3);

    filter_mac_muladdlbW_U44 : component filter_mac_muladdlbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_1916_p0,
        din1 => grp_fu_1916_p1,
        din2 => grp_fu_1916_p2,
        dout => grp_fu_1916_p3);

    filter_mac_muladdjbC_U45 : component filter_mac_muladdjbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_1924_p0,
        din1 => grp_fu_1924_p1,
        din2 => grp_fu_1924_p2,
        dout => grp_fu_1924_p3);

    filter_mac_muladdmb6_U46 : component filter_mac_muladdmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_1932_p0,
        din1 => grp_fu_1932_p1,
        din2 => grp_fu_1932_p2,
        dout => grp_fu_1932_p3);

    filter_mac_muladdncg_U47 : component filter_mac_muladdncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_1940_p0,
        din1 => grp_fu_1940_p1,
        din2 => grp_fu_1932_p3,
        dout => grp_fu_1940_p3);

    filter_mac_muladdocq_U48 : component filter_mac_muladdocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1948_p0,
        din1 => grp_fu_1948_p1,
        din2 => grp_fu_1948_p2,
        dout => grp_fu_1948_p3);

    filter_mul_mul_13pcA_U49 : component filter_mul_mul_13pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 8,
        dout_WIDTH => 20)
    port map (
        din0 => mul_ln1118_10_fu_1956_p0,
        din1 => mul_ln1118_10_fu_1956_p1,
        dout => mul_ln1118_10_fu_1956_p2);

    filter_mac_muladdocq_U50 : component filter_mac_muladdocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1962_p0,
        din1 => grp_fu_1962_p1,
        din2 => grp_fu_1962_p2,
        dout => grp_fu_1962_p3);

    filter_mul_mul_11qcK_U51 : component filter_mul_mul_11qcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 19)
    port map (
        din0 => mul_ln1118_13_fu_1970_p0,
        din1 => mul_ln1118_13_fu_1970_p1,
        dout => mul_ln1118_13_fu_1970_p2);

    filter_mul_mul_12rcU_U52 : component filter_mul_mul_12rcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 20)
    port map (
        din0 => mul_ln1118_14_fu_1976_p0,
        din1 => mul_ln1118_14_fu_1976_p1,
        dout => mul_ln1118_14_fu_1976_p2);

    filter_am_addmul_sc4_U53 : component filter_am_addmul_sc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1982_p0,
        din1 => grp_fu_1982_p1,
        din2 => grp_fu_1982_p2,
        dout => grp_fu_1982_p3);

    filter_mac_muladdtde_U54 : component filter_mac_muladdtde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_1990_p0,
        din1 => grp_fu_1990_p1,
        din2 => grp_fu_1990_p2,
        dout => grp_fu_1990_p3);

    filter_mac_muladdudo_U55 : component filter_mac_muladdudo
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1999_p0,
        din1 => grp_fu_1999_p1,
        din2 => grp_fu_1999_p2,
        dout => grp_fu_1999_p3);

    filter_mac_muladdncg_U56 : component filter_mac_muladdncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_2008_p0,
        din1 => grp_fu_2008_p1,
        din2 => mul_ln1118_10_reg_2488,
        dout => grp_fu_2008_p3);

    filter_mac_muladdvdy_U57 : component filter_mac_muladdvdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_2016_p0,
        din1 => grp_fu_2016_p1,
        din2 => mul_ln1118_14_reg_2498,
        dout => grp_fu_2016_p3);

    filter_mac_muladdlbW_U58 : component filter_mac_muladdlbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_2024_p0,
        din1 => grp_fu_2024_p1,
        din2 => grp_fu_2024_p2,
        dout => grp_fu_2024_p3);

    filter_mac_muladdwdI_U59 : component filter_mac_muladdwdI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 19,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_2033_p0,
        din1 => grp_fu_2033_p1,
        din2 => mul_ln1118_13_reg_2493,
        dout => grp_fu_2033_p3);

    filter_ama_addmulxdS_U60 : component filter_ama_addmulxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2041_p0,
        din1 => grp_fu_2041_p1,
        din2 => grp_fu_2041_p2,
        din3 => mul_ln703_2_reg_2508,
        dout => grp_fu_2041_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln444_fu_910_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((icmp_ln443_fu_460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_3_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_910_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_3_reg_445 <= j_V_fu_916_p2;
            elsif (((icmp_ln443_fu_460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_3_reg_445 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    t_V_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                t_V_reg_434 <= i_V_reg_2286;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_434 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_12_reg_2513 <= add_ln703_12_fu_1689_p2;
                add_ln703_15_reg_2518 <= add_ln703_15_fu_1698_p2;
                add_ln703_22_reg_2523 <= add_ln703_22_fu_1709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_17_reg_2503 <= grp_fu_1962_p3;
                add_ln703_6_reg_2478 <= grp_fu_1940_p3;
                add_ln703_8_reg_2483 <= grp_fu_1948_p3;
                mul_ln703_2_reg_2508 <= grp_fu_1982_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_2_reg_2468 <= grp_fu_1916_p3;
                add_ln703_3_reg_2473 <= grp_fu_1924_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_reg_2463 <= grp_fu_1899_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_910_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_2360 <= and_ln118_fu_964_p2;
                and_ln512_reg_2383 <= and_ln512_fu_1055_p2;
                or_ln457_reg_2374 <= or_ln457_fu_1050_p2;
                trunc_ln458_reg_2369 <= trunc_ln458_fu_1046_p1;
                x_reg_2364 <= x_fu_1038_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_2360_pp0_iter1_reg <= and_ln118_reg_2360;
                and_ln512_reg_2383_pp0_iter1_reg <= and_ln512_reg_2383;
                icmp_ln444_reg_2351 <= icmp_ln444_fu_910_p2;
                icmp_ln444_reg_2351_pp0_iter1_reg <= icmp_ln444_reg_2351;
                or_ln457_reg_2374_pp0_iter1_reg <= or_ln457_reg_2374;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_2383_pp0_iter2_reg <= and_ln512_reg_2383_pp0_iter1_reg;
                and_ln512_reg_2383_pp0_iter3_reg <= and_ln512_reg_2383_pp0_iter2_reg;
                and_ln512_reg_2383_pp0_iter4_reg <= and_ln512_reg_2383_pp0_iter3_reg;
                and_ln512_reg_2383_pp0_iter5_reg <= and_ln512_reg_2383_pp0_iter4_reg;
                and_ln512_reg_2383_pp0_iter6_reg <= and_ln512_reg_2383_pp0_iter5_reg;
                icmp_ln444_reg_2351_pp0_iter2_reg <= icmp_ln444_reg_2351_pp0_iter1_reg;
                icmp_ln444_reg_2351_pp0_iter3_reg <= icmp_ln444_reg_2351_pp0_iter2_reg;
                icmp_ln444_reg_2351_pp0_iter4_reg <= icmp_ln444_reg_2351_pp0_iter3_reg;
                src_kernel_win_0_va_20_reg_2433 <= src_kernel_win_0_va_20_fu_1340_p3;
                src_kernel_win_0_va_20_reg_2433_pp0_iter3_reg <= src_kernel_win_0_va_20_reg_2433;
                src_kernel_win_0_va_20_reg_2433_pp0_iter4_reg <= src_kernel_win_0_va_20_reg_2433_pp0_iter3_reg;
                src_kernel_win_0_va_21_reg_2439 <= src_kernel_win_0_va_21_fu_1362_p3;
                src_kernel_win_0_va_21_reg_2439_pp0_iter3_reg <= src_kernel_win_0_va_21_reg_2439;
                src_kernel_win_0_va_21_reg_2439_pp0_iter4_reg <= src_kernel_win_0_va_21_reg_2439_pp0_iter3_reg;
                src_kernel_win_0_va_22_reg_2445 <= src_kernel_win_0_va_22_fu_1384_p3;
                src_kernel_win_0_va_22_reg_2445_pp0_iter3_reg <= src_kernel_win_0_va_22_reg_2445;
                src_kernel_win_0_va_22_reg_2445_pp0_iter4_reg <= src_kernel_win_0_va_22_reg_2445_pp0_iter3_reg;
                src_kernel_win_0_va_23_reg_2451 <= src_kernel_win_0_va_23_fu_1406_p3;
                src_kernel_win_0_va_23_reg_2451_pp0_iter3_reg <= src_kernel_win_0_va_23_reg_2451;
                src_kernel_win_0_va_23_reg_2451_pp0_iter4_reg <= src_kernel_win_0_va_23_reg_2451_pp0_iter3_reg;
                src_kernel_win_0_va_24_reg_2457 <= src_kernel_win_0_va_24_fu_1428_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_2286 <= i_V_fu_466_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_1_reg_2309 <= icmp_ln879_1_fu_496_p2;
                icmp_ln879_2_reg_2313 <= icmp_ln879_2_fu_502_p2;
                icmp_ln879_reg_2305 <= icmp_ln879_fu_490_p2;
                icmp_ln887_reg_2291 <= icmp_ln887_fu_472_p2;
                icmp_ln899_1_reg_2317 <= icmp_ln899_1_fu_508_p2;
                icmp_ln899_reg_2300 <= icmp_ln899_fu_484_p2;
                xor_ln457_reg_2295 <= xor_ln457_fu_478_p2;
                xor_ln493_1_reg_2326 <= xor_ln493_1_fu_764_p2;
                xor_ln493_2_reg_2331 <= xor_ln493_2_fu_786_p2;
                xor_ln493_3_reg_2336 <= xor_ln493_3_fu_824_p2;
                xor_ln493_4_reg_2341 <= xor_ln493_4_fu_862_p2;
                xor_ln493_5_reg_2346 <= xor_ln493_5_fu_900_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_6_addr_reg_2399 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
                k_buf_0_val_7_addr_reg_2405 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
                k_buf_0_val_8_addr_reg_2411 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
                k_buf_0_val_9_addr_reg_2422 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
                xor_ln493_reg_2392 <= xor_ln493_fu_1090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln1118_10_reg_2488 <= mul_ln1118_10_fu_1956_p2;
                mul_ln1118_13_reg_2493 <= mul_ln1118_13_fu_1970_p2;
                mul_ln1118_14_reg_2498 <= mul_ln1118_14_fu_1976_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter5_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_reg_2528 <= p_Val2_4_fu_1891_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_10_fu_290 <= col_buf_0_val_2_0_fu_1233_p3;
                right_border_buf_0_11_fu_294 <= right_border_buf_0_10_fu_290;
                right_border_buf_0_12_fu_298 <= right_border_buf_0_11_fu_294;
                right_border_buf_0_14_fu_306 <= col_buf_0_val_3_0_fu_1240_p3;
                right_border_buf_0_1_fu_254 <= right_border_buf_0_s_fu_250;
                right_border_buf_0_2_fu_258 <= right_border_buf_0_1_fu_254;
                right_border_buf_0_5_fu_270 <= col_buf_0_val_1_0_fu_1211_p3;
                right_border_buf_0_6_fu_274 <= right_border_buf_0_5_fu_270;
                right_border_buf_0_7_fu_278 <= right_border_buf_0_6_fu_274;
                right_border_buf_0_8_fu_282 <= col_buf_0_val_4_0_fu_1246_p3;
                right_border_buf_0_s_fu_250 <= col_buf_0_val_0_0_fu_1189_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_13_fu_302 <= ap_sig_allocacmp_right_border_buf_0_18;
                right_border_buf_0_3_fu_262 <= right_border_buf_0_4_fu_266;
                right_border_buf_0_4_fu_266 <= ap_sig_allocacmp_right_border_buf_0_16;
                right_border_buf_0_9_fu_286 <= right_border_buf_0_13_fu_302;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_10_fu_210 <= src_kernel_win_0_va_9_fu_206;
                src_kernel_win_0_va_11_fu_214 <= src_kernel_win_0_va_10_fu_210;
                src_kernel_win_0_va_12_fu_218 <= src_kernel_win_0_va_23_reg_2451_pp0_iter4_reg;
                src_kernel_win_0_va_13_fu_222 <= src_kernel_win_0_va_12_fu_218;
                src_kernel_win_0_va_14_fu_226 <= src_kernel_win_0_va_13_fu_222;
                src_kernel_win_0_va_1_fu_174 <= src_kernel_win_0_va_fu_170;
                src_kernel_win_0_va_2_fu_178 <= src_kernel_win_0_va_1_fu_174;
                src_kernel_win_0_va_3_fu_182 <= src_kernel_win_0_va_2_fu_178;
                src_kernel_win_0_va_4_fu_186 <= src_kernel_win_0_va_21_reg_2439_pp0_iter4_reg;
                src_kernel_win_0_va_5_fu_190 <= src_kernel_win_0_va_4_fu_186;
                src_kernel_win_0_va_6_fu_194 <= src_kernel_win_0_va_5_fu_190;
                src_kernel_win_0_va_7_fu_198 <= src_kernel_win_0_va_6_fu_194;
                src_kernel_win_0_va_8_fu_202 <= src_kernel_win_0_va_22_reg_2445_pp0_iter4_reg;
                src_kernel_win_0_va_9_fu_206 <= src_kernel_win_0_va_8_fu_202;
                src_kernel_win_0_va_fu_170 <= src_kernel_win_0_va_20_reg_2433_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2351_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_15_fu_230 <= ap_sig_allocacmp_src_kernel_win_0_va_56;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_2351_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_fu_234 <= src_kernel_win_0_va_24_reg_2457;
                src_kernel_win_0_va_17_fu_238 <= src_kernel_win_0_va_16_fu_234;
                src_kernel_win_0_va_18_fu_242 <= src_kernel_win_0_va_17_fu_238;
                src_kernel_win_0_va_19_fu_246 <= src_kernel_win_0_va_18_fu_242;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln457_reg_2374 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_8_reg_2417 <= tmp_8_fu_1095_p7;
                tmp_9_reg_2428 <= tmp_9_fu_1111_p7;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, icmp_ln443_fu_460_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_938_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(zext_ln444_fu_906_p1));
    add_ln118_1_fu_868_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(trunc_ln506_fu_514_p1));
    add_ln118_fu_792_p2 <= std_logic_vector(signed(ap_const_lv3_5) + signed(trunc_ln506_fu_514_p1));
    add_ln506_1_fu_594_p2 <= std_logic_vector(signed(ap_const_lv10_3FE) + signed(zext_ln443_fu_456_p1));
    add_ln506_2_fu_670_p2 <= std_logic_vector(signed(ap_const_lv10_3FD) + signed(zext_ln443_fu_456_p1));
    add_ln506_3_fu_696_p2 <= std_logic_vector(signed(ap_const_lv10_3FC) + signed(zext_ln443_fu_456_p1));
    add_ln506_4_fu_722_p2 <= std_logic_vector(signed(ap_const_lv10_3FB) + signed(zext_ln443_fu_456_p1));
    add_ln506_fu_518_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(zext_ln443_fu_456_p1));
    add_ln507_1_fu_600_p2 <= std_logic_vector(signed(ap_const_lv3_6) + signed(trunc_ln506_fu_514_p1));
    add_ln507_fu_524_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(trunc_ln506_fu_514_p1));
    add_ln703_10_fu_1654_p2 <= std_logic_vector(unsigned(zext_ln703_11_fu_1651_p1) + unsigned(grp_fu_1999_p3));
    add_ln703_12_fu_1689_p2 <= std_logic_vector(unsigned(zext_ln703_13_fu_1686_p1) + unsigned(zext_ln703_12_fu_1659_p1));
    add_ln703_15_fu_1698_p2 <= std_logic_vector(unsigned(zext_ln703_14_fu_1695_p1) + unsigned(grp_fu_2016_p3));
    add_ln703_16_fu_1821_p2 <= std_logic_vector(unsigned(zext_ln703_15_fu_1818_p1) + unsigned(add_ln703_12_reg_2513));
    add_ln703_22_fu_1709_p2 <= std_logic_vector(unsigned(zext_ln703_18_fu_1706_p1) + unsigned(grp_fu_2024_p3));
    add_ln703_4_fu_1546_p2 <= std_logic_vector(unsigned(zext_ln703_5_fu_1543_p1) + unsigned(add_ln703_2_reg_2468));
    and_ln118_1_fu_550_p2 <= (xor_ln118_2_fu_538_p2 and icmp_ln118_fu_544_p2);
    and_ln118_2_fu_626_p2 <= (xor_ln118_3_fu_614_p2 and icmp_ln118_2_fu_620_p2);
    and_ln118_fu_964_p2 <= (xor_ln118_4_fu_952_p2 and icmp_ln118_1_fu_958_p2);
    and_ln144_fu_1032_p2 <= (or_ln118_fu_1026_p2 and icmp_ln144_fu_996_p2);
    and_ln512_fu_1055_p2 <= (icmp_ln899_reg_2300 and icmp_ln891_fu_932_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, and_ln512_reg_2383_pp0_iter6_reg, ap_predicate_op194_read_state4, ap_predicate_op205_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op194_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, and_ln512_reg_2383_pp0_iter6_reg, ap_predicate_op194_read_state4, ap_predicate_op205_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op194_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, and_ln512_reg_2383_pp0_iter6_reg, ap_predicate_op194_read_state4, ap_predicate_op205_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op194_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state10_pp0_stage0_iter7_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_2383_pp0_iter6_reg)
    begin
                ap_block_state10_pp0_stage0_iter7 <= ((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter6_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op194_read_state4, ap_predicate_op205_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op205_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op194_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln443_fu_460_p2, ap_CS_fsm_state2)
    begin
        if ((((icmp_ln443_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_182_assign_proc : process(icmp_ln444_reg_2351)
    begin
                ap_enable_operation_182 <= (icmp_ln444_reg_2351 = ap_const_lv1_0);
    end process;


    ap_enable_operation_185_assign_proc : process(icmp_ln444_reg_2351)
    begin
                ap_enable_operation_185 <= (icmp_ln444_reg_2351 = ap_const_lv1_0);
    end process;


    ap_enable_operation_187_assign_proc : process(icmp_ln444_reg_2351)
    begin
                ap_enable_operation_187 <= (icmp_ln444_reg_2351 = ap_const_lv1_0);
    end process;


    ap_enable_operation_189_assign_proc : process(icmp_ln444_reg_2351)
    begin
                ap_enable_operation_189 <= (icmp_ln444_reg_2351 = ap_const_lv1_0);
    end process;


    ap_enable_operation_192_assign_proc : process(ap_predicate_op192_load_state4)
    begin
                ap_enable_operation_192 <= (ap_predicate_op192_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_195_assign_proc : process(ap_predicate_op195_store_state4)
    begin
                ap_enable_operation_195 <= (ap_predicate_op195_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_197_assign_proc : process(ap_predicate_op197_store_state4)
    begin
                ap_enable_operation_197 <= (ap_predicate_op197_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_199_assign_proc : process(ap_predicate_op199_store_state4)
    begin
                ap_enable_operation_199 <= (ap_predicate_op199_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_201_assign_proc : process(ap_predicate_op201_store_state4)
    begin
                ap_enable_operation_201 <= (ap_predicate_op201_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_203_assign_proc : process(ap_predicate_op203_store_state4)
    begin
                ap_enable_operation_203 <= (ap_predicate_op203_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_206_assign_proc : process(ap_predicate_op206_store_state4)
    begin
                ap_enable_operation_206 <= (ap_predicate_op206_store_state4 = ap_const_boolean_1);
    end process;

        ap_enable_operation_224 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_227 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_230 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_233 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_235_assign_proc : process(or_ln457_reg_2374_pp0_iter1_reg)
    begin
                ap_enable_operation_235 <= (or_ln457_reg_2374_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_243_assign_proc : process(ap_predicate_op243_store_state5)
    begin
                ap_enable_operation_243 <= (ap_predicate_op243_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_244_assign_proc : process(ap_predicate_op244_store_state5)
    begin
                ap_enable_operation_244 <= (ap_predicate_op244_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_245_assign_proc : process(ap_predicate_op245_store_state5)
    begin
                ap_enable_operation_245 <= (ap_predicate_op245_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_246_assign_proc : process(ap_predicate_op246_store_state5)
    begin
                ap_enable_operation_246 <= (ap_predicate_op246_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op192_load_state4_assign_proc : process(icmp_ln444_reg_2351, or_ln457_reg_2374)
    begin
                ap_predicate_op192_load_state4 <= ((or_ln457_reg_2374 = ap_const_lv1_1) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op194_read_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300)
    begin
                ap_predicate_op194_read_state4 <= ((ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op195_store_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_reg_2305)
    begin
                ap_predicate_op195_store_state4 <= ((icmp_ln879_reg_2305 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op197_store_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_1_reg_2309)
    begin
                ap_predicate_op197_store_state4 <= ((icmp_ln879_1_reg_2309 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op199_store_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_2_reg_2313)
    begin
                ap_predicate_op199_store_state4 <= ((icmp_ln879_2_reg_2313 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op201_store_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_1_reg_2309)
    begin
                ap_predicate_op201_store_state4 <= ((icmp_ln879_1_reg_2309 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op203_store_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_reg_2305)
    begin
                ap_predicate_op203_store_state4 <= ((icmp_ln879_reg_2305 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op205_read_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln887_reg_2291)
    begin
                ap_predicate_op205_read_state4 <= ((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op206_store_state4_assign_proc : process(icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln887_reg_2291)
    begin
                ap_predicate_op206_store_state4 <= ((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln444_reg_2351 = ap_const_lv1_0));
    end process;


    ap_predicate_op243_store_state5_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, and_ln118_reg_2360_pp0_iter1_reg)
    begin
                ap_predicate_op243_store_state5 <= ((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg));
    end process;


    ap_predicate_op244_store_state5_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, and_ln118_reg_2360_pp0_iter1_reg)
    begin
                ap_predicate_op244_store_state5 <= ((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg));
    end process;


    ap_predicate_op245_store_state5_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, and_ln118_reg_2360_pp0_iter1_reg)
    begin
                ap_predicate_op245_store_state5 <= ((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg));
    end process;


    ap_predicate_op246_store_state5_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, and_ln118_reg_2360_pp0_iter1_reg)
    begin
                ap_predicate_op246_store_state5 <= ((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg));
    end process;


    ap_ready_assign_proc : process(icmp_ln443_fu_460_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_460_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_16_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_2300, icmp_ln887_reg_2291, and_ln118_reg_2360_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_8_fu_282, col_buf_0_val_4_0_fu_1246_p3)
    begin
        if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_16 <= col_buf_0_val_4_0_fu_1246_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_16 <= right_border_buf_0_8_fu_282;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_18_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_2300, icmp_ln887_reg_2291, and_ln118_reg_2360_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_14_fu_306, col_buf_0_val_3_0_fu_1240_p3)
    begin
        if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_18 <= col_buf_0_val_3_0_fu_1240_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_18 <= right_border_buf_0_14_fu_306;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_27_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_1_fu_174, src_kernel_win_0_va_2_fu_178)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_27 <= src_kernel_win_0_va_1_fu_174;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_27 <= src_kernel_win_0_va_2_fu_178;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_30_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_4_fu_186, src_kernel_win_0_va_5_fu_190)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_30 <= src_kernel_win_0_va_4_fu_186;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_30 <= src_kernel_win_0_va_5_fu_190;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_31_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_5_fu_190, src_kernel_win_0_va_6_fu_194)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_31 <= src_kernel_win_0_va_5_fu_190;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_31 <= src_kernel_win_0_va_6_fu_194;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_32_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_6_fu_194, src_kernel_win_0_va_7_fu_198)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_32 <= src_kernel_win_0_va_6_fu_194;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_32 <= src_kernel_win_0_va_7_fu_198;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_34_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_8_fu_202, src_kernel_win_0_va_9_fu_206)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_34 <= src_kernel_win_0_va_8_fu_202;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_34 <= src_kernel_win_0_va_9_fu_206;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_36_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_10_fu_210, src_kernel_win_0_va_11_fu_214)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_36 <= src_kernel_win_0_va_10_fu_210;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_36 <= src_kernel_win_0_va_11_fu_214;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_38_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_12_fu_218, src_kernel_win_0_va_13_fu_222)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_38 <= src_kernel_win_0_va_12_fu_218;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_38 <= src_kernel_win_0_va_13_fu_222;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_39_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_13_fu_222, src_kernel_win_0_va_14_fu_226)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_39 <= src_kernel_win_0_va_13_fu_222;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_39 <= src_kernel_win_0_va_14_fu_226;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_40_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter3_reg, ap_enable_reg_pp0_iter4, ap_sig_allocacmp_src_kernel_win_0_va_56, src_kernel_win_0_va_15_fu_230)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_40 <= ap_sig_allocacmp_src_kernel_win_0_va_56;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_40 <= src_kernel_win_0_va_15_fu_230;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_43_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter2_reg, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_17_fu_238, src_kernel_win_0_va_18_fu_242)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_43 <= src_kernel_win_0_va_17_fu_238;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_43 <= src_kernel_win_0_va_18_fu_242;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_44_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter2_reg, ap_enable_reg_pp0_iter3, src_kernel_win_0_va_18_fu_242, src_kernel_win_0_va_19_fu_246)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_44 <= src_kernel_win_0_va_18_fu_242;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_44 <= src_kernel_win_0_va_19_fu_246;
        end if; 
    end process;


    ap_sig_allocacmp_src_kernel_win_0_va_56_assign_proc : process(ap_block_pp0_stage0, icmp_ln444_reg_2351_pp0_iter4_reg, ap_enable_reg_pp0_iter5, src_kernel_win_0_va_13_fu_222, src_kernel_win_0_va_14_fu_226)
    begin
        if (((icmp_ln444_reg_2351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_src_kernel_win_0_va_56 <= src_kernel_win_0_va_13_fu_222;
        else 
            ap_sig_allocacmp_src_kernel_win_0_va_56 <= src_kernel_win_0_va_14_fu_226;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_1189_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_2374_pp0_iter1_reg(0) = '1') else 
        tmp_5_fu_1174_p7;
    col_buf_0_val_1_0_fu_1211_p3 <= 
        k_buf_0_val_6_q0 when (or_ln457_reg_2374_pp0_iter1_reg(0) = '1') else 
        tmp_6_fu_1196_p7;
    col_buf_0_val_2_0_fu_1233_p3 <= 
        k_buf_0_val_7_q0 when (or_ln457_reg_2374_pp0_iter1_reg(0) = '1') else 
        tmp_7_fu_1218_p7;
    col_buf_0_val_3_0_fu_1240_p3 <= 
        k_buf_0_val_8_q0 when (or_ln457_reg_2374_pp0_iter1_reg(0) = '1') else 
        tmp_8_reg_2417;
    col_buf_0_val_4_0_fu_1246_p3 <= 
        k_buf_0_val_9_q0 when (or_ln457_reg_2374_pp0_iter1_reg(0) = '1') else 
        tmp_9_reg_2428;
    deleted_zeros_fu_1885_p2 <= (xor_ln777_fu_1871_p2 or tmp_29_fu_1877_p3);
    grp_fu_1899_p0 <= ap_const_lv16_52(8 - 1 downto 0);
    grp_fu_1899_p1 <= grp_fu_1899_p10(8 - 1 downto 0);
    grp_fu_1899_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_44),16));
    grp_fu_1899_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv17_11B) * unsigned(mul_ln703_fu_1449_p1), 17));
    grp_fu_1907_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_1907_p1 <= grp_fu_1907_p10(8 - 1 downto 0);
    grp_fu_1907_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_17_fu_238),18));
    grp_fu_1907_p2 <= grp_fu_1907_p20(17 - 1 downto 0);
    grp_fu_1907_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_reg_2463),18));
    grp_fu_1916_p0 <= ap_const_lv18_11B(10 - 1 downto 0);
    grp_fu_1916_p1 <= grp_fu_1916_p10(8 - 1 downto 0);
    grp_fu_1916_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_16_fu_234),18));
    grp_fu_1916_p2 <= grp_fu_1916_p20(18 - 1 downto 0);
    grp_fu_1916_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1907_p3),19));
    grp_fu_1924_p0 <= ap_const_lv16_52(8 - 1 downto 0);
    grp_fu_1924_p1 <= grp_fu_1924_p10(8 - 1 downto 0);
    grp_fu_1924_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_2457),16));
    grp_fu_1924_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv17_11B) * unsigned(mul_ln703_1_fu_1485_p1), 17));
    grp_fu_1932_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    grp_fu_1932_p1 <= grp_fu_1932_p10(8 - 1 downto 0);
    grp_fu_1932_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_39),19));
    grp_fu_1932_p2 <= grp_fu_1932_p20(19 - 1 downto 0);
    grp_fu_1932_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_4_fu_1546_p2),20));
    grp_fu_1940_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    grp_fu_1940_p1 <= grp_fu_1940_p10(8 - 1 downto 0);
    grp_fu_1940_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_38),20));
    grp_fu_1948_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_1948_p1 <= grp_fu_1948_p10(8 - 1 downto 0);
    grp_fu_1948_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_36),18));
    grp_fu_1948_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv18_11B) * unsigned(mul_ln1118_7_fu_1566_p1), 18));
    grp_fu_1962_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_1962_p1 <= grp_fu_1962_p10(8 - 1 downto 0);
    grp_fu_1962_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_reg_2445_pp0_iter3_reg),18));
    grp_fu_1962_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv18_11B) * unsigned(mul_ln1118_16_fu_1602_p1), 18));
    grp_fu_1982_p0 <= grp_fu_1982_p00(8 - 1 downto 0);
    grp_fu_1982_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_reg_2439_pp0_iter3_reg),9));
    grp_fu_1982_p1 <= grp_fu_1982_p10(8 - 1 downto 0);
    grp_fu_1982_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_32),9));
    grp_fu_1982_p2 <= ap_const_lv18_11B(10 - 1 downto 0);
    grp_fu_1990_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    grp_fu_1990_p1 <= grp_fu_1990_p10(8 - 1 downto 0);
    grp_fu_1990_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_12_fu_218),19));
    grp_fu_1990_p2 <= grp_fu_1990_p20(18 - 1 downto 0);
    grp_fu_1990_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_8_reg_2483),19));
    grp_fu_1999_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    grp_fu_1999_p1 <= grp_fu_1999_p10(8 - 1 downto 0);
    grp_fu_1999_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_10_fu_210),20));
    grp_fu_1999_p2 <= grp_fu_1999_p20(20 - 1 downto 0);
    grp_fu_1999_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_6_reg_2478),21));
    grp_fu_2008_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    grp_fu_2008_p1 <= grp_fu_2008_p10(8 - 1 downto 0);
    grp_fu_2008_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_fu_202),20));
    grp_fu_2016_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    grp_fu_2016_p1 <= grp_fu_2016_p10(8 - 1 downto 0);
    grp_fu_2016_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_186),19));
    grp_fu_2024_p0 <= ap_const_lv18_1AC(10 - 1 downto 0);
    grp_fu_2024_p1 <= grp_fu_2024_p10(8 - 1 downto 0);
    grp_fu_2024_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_174),18));
    grp_fu_2024_p2 <= grp_fu_2024_p20(18 - 1 downto 0);
    grp_fu_2024_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_17_reg_2503),19));
    grp_fu_2033_p0 <= ap_const_lv18_11B(10 - 1 downto 0);
    grp_fu_2033_p1 <= grp_fu_2033_p10(8 - 1 downto 0);
    grp_fu_2033_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_170),18));
    grp_fu_2041_p0 <= grp_fu_2041_p00(8 - 1 downto 0);
    grp_fu_2041_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_182),9));
    grp_fu_2041_p1 <= grp_fu_2041_p10(8 - 1 downto 0);
    grp_fu_2041_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_reg_2433_pp0_iter4_reg),9));
    grp_fu_2041_p2 <= ap_const_lv16_52(8 - 1 downto 0);
    i_V_fu_466_p2 <= std_logic_vector(unsigned(t_V_reg_434) + unsigned(ap_const_lv9_1));
    icmp_ln118_1_fu_958_p2 <= "1" when (signed(ImagLoc_x_fu_938_p2) < signed(ap_const_lv11_280)) else "0";
    icmp_ln118_2_fu_620_p2 <= "1" when (signed(add_ln506_1_fu_594_p2) < signed(ap_const_lv10_1E0)) else "0";
    icmp_ln118_fu_544_p2 <= "1" when (signed(add_ln506_fu_518_p2) < signed(ap_const_lv10_1E0)) else "0";
    icmp_ln144_1_fu_582_p2 <= "1" when (signed(select_ln139_1_fu_570_p3) < signed(ap_const_lv10_1E0)) else "0";
    icmp_ln144_2_fu_658_p2 <= "1" when (signed(select_ln139_2_fu_646_p3) < signed(ap_const_lv10_1E0)) else "0";
    icmp_ln144_fu_996_p2 <= "1" when (signed(select_ln139_fu_984_p3) < signed(ap_const_lv11_280)) else "0";
    icmp_ln443_fu_460_p2 <= "1" when (t_V_reg_434 = ap_const_lv9_1E3) else "0";
    icmp_ln444_fu_910_p2 <= "1" when (t_V_3_reg_445 = ap_const_lv10_284) else "0";
    icmp_ln879_1_fu_496_p2 <= "1" when (t_V_reg_434 = ap_const_lv9_1) else "0";
    icmp_ln879_2_fu_502_p2 <= "1" when (t_V_reg_434 = ap_const_lv9_0) else "0";
    icmp_ln879_fu_490_p2 <= "1" when (t_V_reg_434 = ap_const_lv9_2) else "0";
    icmp_ln887_fu_472_p2 <= "1" when (unsigned(t_V_reg_434) < unsigned(ap_const_lv9_1E0)) else "0";
    icmp_ln891_fu_932_p2 <= "0" when (tmp_22_fu_922_p4 = ap_const_lv8_0) else "1";
    icmp_ln899_1_fu_508_p2 <= "1" when (unsigned(t_V_reg_434) > unsigned(ap_const_lv9_1E0)) else "0";
    icmp_ln899_fu_484_p2 <= "1" when (unsigned(t_V_reg_434) > unsigned(ap_const_lv9_2)) else "0";
    j_V_fu_916_p2 <= std_logic_vector(unsigned(t_V_3_reg_445) + unsigned(ap_const_lv10_1));
    k_buf_0_val_5_address0 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
    k_buf_0_val_5_address1 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_reg_2305, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_2305 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln887_reg_2291, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_6_address0 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
    k_buf_0_val_6_address1 <= k_buf_0_val_6_addr_reg_2399;

    k_buf_0_val_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_1_reg_2309, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_2309 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_we1_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, ap_block_pp0_stage0_11001, and_ln118_reg_2360_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_6_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_7_address0 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
    k_buf_0_val_7_address1 <= k_buf_0_val_7_addr_reg_2405;

    k_buf_0_val_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_2_reg_2313, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_2_reg_2313 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_we1_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, ap_block_pp0_stage0_11001, and_ln118_reg_2360_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_8_address0 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
    k_buf_0_val_8_address1 <= k_buf_0_val_8_addr_reg_2411;

    k_buf_0_val_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_1_reg_2309, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_2309 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_we1_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, ap_block_pp0_stage0_11001, and_ln118_reg_2360_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_9_address0 <= zext_ln835_fu_1081_p1(10 - 1 downto 0);
    k_buf_0_val_9_address1 <= k_buf_0_val_9_addr_reg_2422;

    k_buf_0_val_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_reg_2305, ap_block_pp0_stage0_11001, or_ln457_reg_2374)
    begin
        if ((((icmp_ln879_reg_2305 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_2374 = ap_const_lv1_1) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_9_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln879_reg_2305, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_2305 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_we1_assign_proc : process(icmp_ln899_reg_2300, icmp_ln887_reg_2291, ap_block_pp0_stage0_11001, and_ln118_reg_2360_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_10_fu_1956_p0 <= ap_const_lv20_8BD(13 - 1 downto 0);
    mul_ln1118_10_fu_1956_p1 <= mul_ln1118_10_fu_1956_p10(8 - 1 downto 0);
    mul_ln1118_10_fu_1956_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_34),20));
    mul_ln1118_13_fu_1970_p0 <= ap_const_lv19_3D3(11 - 1 downto 0);
    mul_ln1118_13_fu_1970_p1 <= mul_ln1118_13_fu_1970_p10(8 - 1 downto 0);
    mul_ln1118_13_fu_1970_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_31),19));
    mul_ln1118_14_fu_1976_p0 <= ap_const_lv20_5C8(12 - 1 downto 0);
    mul_ln1118_14_fu_1976_p1 <= mul_ln1118_14_fu_1976_p10(8 - 1 downto 0);
    mul_ln1118_14_fu_1976_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_30),20));
    mul_ln1118_16_fu_1602_p1 <= mul_ln1118_16_fu_1602_p10(8 - 1 downto 0);
    mul_ln1118_16_fu_1602_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_27),18));
    mul_ln1118_7_fu_1566_p1 <= mul_ln1118_7_fu_1566_p10(8 - 1 downto 0);
    mul_ln1118_7_fu_1566_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_reg_2451_pp0_iter3_reg),18));
    mul_ln703_1_fu_1485_p1 <= mul_ln703_1_fu_1485_p10(8 - 1 downto 0);
    mul_ln703_1_fu_1485_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_40),17));
    mul_ln703_fu_1449_p1 <= mul_ln703_fu_1449_p10(8 - 1 downto 0);
    mul_ln703_fu_1449_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_src_kernel_win_0_va_43),17));
    or_ln118_fu_1026_p2 <= (xor_ln118_5_fu_1020_p2 or tmp_23_fu_944_p3);
    or_ln457_fu_1050_p2 <= (xor_ln457_reg_2295 or icmp_ln118_1_fu_958_p2);
    p_Val2_1_fu_1835_p4 <= p_Val2_s_fu_1829_p2(21 downto 14);
    p_Val2_2_fu_1857_p2 <= std_logic_vector(unsigned(p_Val2_1_fu_1835_p4) + unsigned(zext_ln415_fu_1853_p1));
    p_Val2_4_fu_1891_p3 <= 
        p_Val2_2_fu_1857_p2 when (deleted_zeros_fu_1885_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_s_fu_1829_p2 <= std_logic_vector(unsigned(zext_ln703_19_fu_1826_p1) + unsigned(add_ln703_16_fu_1821_p2));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, and_ln512_reg_2383_pp0_iter6_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter6_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_4_reg_2528;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter7, and_ln512_reg_2383_pp0_iter6_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_2383_pp0_iter6_reg) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln444_reg_2351, and_ln118_reg_2360, icmp_ln899_reg_2300, icmp_ln887_reg_2291)
    begin
        if ((((icmp_ln887_reg_2291 = ap_const_lv1_1) and (icmp_ln899_reg_2300 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln118_reg_2360) and (icmp_ln899_reg_2300 = ap_const_lv1_0) and (icmp_ln444_reg_2351 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op194_read_state4, ap_predicate_op205_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op205_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op194_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln118_1_fu_854_p3 <= 
        select_ln139_4_fu_846_p3 when (tmp_18_fu_702_p3(0) = '1') else 
        xor_ln118_1_fu_830_p2;
    select_ln118_2_fu_892_p3 <= 
        select_ln139_5_fu_884_p3 when (tmp_20_fu_728_p3(0) = '1') else 
        add_ln118_1_fu_868_p2;
    select_ln118_3_fu_1008_p3 <= 
        ImagLoc_x_fu_938_p2 when (and_ln118_fu_964_p2(0) = '1') else 
        sub_ln147_fu_1002_p2;
    select_ln118_fu_816_p3 <= 
        select_ln139_3_fu_808_p3 when (tmp_16_fu_676_p3(0) = '1') else 
        add_ln118_fu_792_p2;
    select_ln139_1_fu_570_p3 <= 
        sub_ln142_fu_564_p2 when (tmp_4_fu_556_p3(0) = '1') else 
        add_ln506_fu_518_p2;
    select_ln139_2_fu_646_p3 <= 
        sub_ln142_1_fu_640_p2 when (tmp_15_fu_632_p3(0) = '1') else 
        add_ln506_1_fu_594_p2;
    select_ln139_3_fu_808_p3 <= 
        sub_ln118_fu_798_p2 when (tmp_17_fu_684_p3(0) = '1') else 
        trunc_ln118_fu_804_p1;
    select_ln139_4_fu_846_p3 <= 
        sub_ln118_1_fu_836_p2 when (tmp_19_fu_710_p3(0) = '1') else 
        trunc_ln118_1_fu_842_p1;
    select_ln139_5_fu_884_p3 <= 
        sub_ln118_2_fu_874_p2 when (tmp_21_fu_736_p3(0) = '1') else 
        trunc_ln118_2_fu_880_p1;
    select_ln139_fu_984_p3 <= 
        sub_ln142_2_fu_978_p2 when (tmp_24_fu_970_p3(0) = '1') else 
        ImagLoc_x_fu_938_p2;
    select_ln507_1_fu_756_p3 <= 
        add_ln507_fu_524_p2 when (and_ln118_1_fu_550_p2(0) = '1') else 
        select_ln507_fu_748_p3;
    select_ln507_2_fu_770_p3 <= 
        trunc_ln507_1_fu_654_p1 when (icmp_ln144_2_fu_658_p2(0) = '1') else 
        sub_ln507_1_fu_664_p2;
    select_ln507_3_fu_778_p3 <= 
        add_ln507_1_fu_600_p2 when (and_ln118_2_fu_626_p2(0) = '1') else 
        select_ln507_2_fu_770_p3;
    select_ln507_fu_748_p3 <= 
        trunc_ln507_fu_578_p1 when (icmp_ln144_1_fu_582_p2(0) = '1') else 
        sub_ln507_fu_588_p2;
        sext_ln139_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln139_fu_984_p3),12));

        sext_ln144_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_2364),32));

    src_kernel_win_0_va_20_fu_1340_p3 <= 
        tmp_2_fu_1325_p7 when (icmp_ln899_1_reg_2317(0) = '1') else 
        col_buf_0_val_0_0_fu_1189_p3;
    src_kernel_win_0_va_21_fu_1362_p3 <= 
        tmp_3_fu_1347_p7 when (icmp_ln899_1_reg_2317(0) = '1') else 
        col_buf_0_val_1_0_fu_1211_p3;
    src_kernel_win_0_va_22_fu_1384_p3 <= 
        tmp_10_fu_1369_p7 when (icmp_ln899_1_reg_2317(0) = '1') else 
        col_buf_0_val_2_0_fu_1233_p3;
    src_kernel_win_0_va_23_fu_1406_p3 <= 
        tmp_11_fu_1391_p7 when (icmp_ln899_1_reg_2317(0) = '1') else 
        col_buf_0_val_3_0_fu_1240_p3;
    src_kernel_win_0_va_24_fu_1428_p3 <= 
        tmp_12_fu_1413_p7 when (icmp_ln899_1_reg_2317(0) = '1') else 
        col_buf_0_val_4_0_fu_1246_p3;
    sub_ln118_1_fu_836_p2 <= std_logic_vector(signed(ap_const_lv3_4) - signed(trunc_ln142_1_fu_718_p1));
    sub_ln118_2_fu_874_p2 <= std_logic_vector(signed(ap_const_lv3_5) - signed(trunc_ln142_2_fu_744_p1));
    sub_ln118_fu_798_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) - unsigned(trunc_ln142_fu_692_p1));
    sub_ln142_1_fu_640_p2 <= std_logic_vector(unsigned(ap_const_lv10_2) - unsigned(zext_ln443_fu_456_p1));
    sub_ln142_2_fu_978_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) - unsigned(zext_ln444_fu_906_p1));
    sub_ln142_fu_564_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) - unsigned(zext_ln443_fu_456_p1));
    sub_ln147_fu_1002_p2 <= std_logic_vector(signed(ap_const_lv11_4FE) - signed(select_ln139_fu_984_p3));
    sub_ln507_1_fu_664_p2 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln507_1_fu_654_p1));
    sub_ln507_fu_588_p2 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln507_fu_578_p1));
    tmp_14_fu_606_p3 <= add_ln506_1_fu_594_p2(9 downto 9);
    tmp_15_fu_632_p3 <= add_ln506_1_fu_594_p2(9 downto 9);
    tmp_16_fu_676_p3 <= add_ln506_2_fu_670_p2(9 downto 9);
    tmp_17_fu_684_p3 <= add_ln506_2_fu_670_p2(9 downto 9);
    tmp_18_fu_702_p3 <= add_ln506_3_fu_696_p2(9 downto 9);
    tmp_19_fu_710_p3 <= add_ln506_3_fu_696_p2(9 downto 9);
    tmp_20_fu_728_p3 <= add_ln506_4_fu_722_p2(9 downto 9);
    tmp_21_fu_736_p3 <= add_ln506_4_fu_722_p2(9 downto 9);
    tmp_22_fu_922_p4 <= t_V_3_reg_445(9 downto 2);
    tmp_23_fu_944_p3 <= ImagLoc_x_fu_938_p2(10 downto 10);
    tmp_24_fu_970_p3 <= ImagLoc_x_fu_938_p2(10 downto 10);
    tmp_27_fu_1845_p3 <= p_Val2_s_fu_1829_p2(13 downto 13);
    tmp_28_fu_1863_p3 <= p_Val2_s_fu_1829_p2(21 downto 21);
    tmp_29_fu_1877_p3 <= p_Val2_2_fu_1857_p2(7 downto 7);
    tmp_4_fu_556_p3 <= add_ln506_fu_518_p2(9 downto 9);
    tmp_fu_530_p3 <= add_ln506_fu_518_p2(9 downto 9);
    trunc_ln118_1_fu_842_p1 <= add_ln506_3_fu_696_p2(3 - 1 downto 0);
    trunc_ln118_2_fu_880_p1 <= add_ln506_4_fu_722_p2(3 - 1 downto 0);
    trunc_ln118_fu_804_p1 <= add_ln506_2_fu_670_p2(3 - 1 downto 0);
    trunc_ln142_1_fu_718_p1 <= t_V_reg_434(3 - 1 downto 0);
    trunc_ln142_2_fu_744_p1 <= t_V_reg_434(3 - 1 downto 0);
    trunc_ln142_fu_692_p1 <= t_V_reg_434(3 - 1 downto 0);
    trunc_ln458_fu_1046_p1 <= x_fu_1038_p3(3 - 1 downto 0);
    trunc_ln506_fu_514_p1 <= t_V_reg_434(3 - 1 downto 0);
    trunc_ln507_1_fu_654_p1 <= select_ln139_2_fu_646_p3(3 - 1 downto 0);
    trunc_ln507_fu_578_p1 <= select_ln139_1_fu_570_p3(3 - 1 downto 0);
    x_fu_1038_p3 <= 
        sext_ln139_fu_992_p1 when (and_ln144_fu_1032_p2(0) = '1') else 
        zext_ln118_fu_1016_p1;
    xor_ln118_1_fu_830_p2 <= (trunc_ln506_fu_514_p1 xor ap_const_lv3_4);
    xor_ln118_2_fu_538_p2 <= (tmp_fu_530_p3 xor ap_const_lv1_1);
    xor_ln118_3_fu_614_p2 <= (tmp_14_fu_606_p3 xor ap_const_lv1_1);
    xor_ln118_4_fu_952_p2 <= (tmp_23_fu_944_p3 xor ap_const_lv1_1);
    xor_ln118_5_fu_1020_p2 <= (icmp_ln118_1_fu_958_p2 xor ap_const_lv1_1);
    xor_ln457_fu_478_p2 <= (icmp_ln887_fu_472_p2 xor ap_const_lv1_1);
    xor_ln493_1_fu_764_p2 <= (select_ln507_1_fu_756_p3 xor ap_const_lv3_7);
    xor_ln493_2_fu_786_p2 <= (select_ln507_3_fu_778_p3 xor ap_const_lv3_7);
    xor_ln493_3_fu_824_p2 <= (select_ln118_fu_816_p3 xor ap_const_lv3_7);
    xor_ln493_4_fu_862_p2 <= (select_ln118_1_fu_854_p3 xor ap_const_lv3_7);
    xor_ln493_5_fu_900_p2 <= (select_ln118_2_fu_892_p3 xor ap_const_lv3_7);
    xor_ln493_fu_1090_p2 <= (trunc_ln458_reg_2369 xor ap_const_lv3_7);
    xor_ln777_fu_1871_p2 <= (tmp_28_fu_1863_p3 xor ap_const_lv1_1);
    zext_ln118_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln118_3_fu_1008_p3),12));
    zext_ln415_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1845_p3),8));
    zext_ln443_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_434),10));
    zext_ln444_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_445),11));
    zext_ln703_11_fu_1651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1990_p3),21));
    zext_ln703_12_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_10_fu_1654_p2),22));
    zext_ln703_13_fu_1686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2008_p3),22));
    zext_ln703_14_fu_1695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2033_p3),20));
    zext_ln703_15_fu_1818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_15_reg_2518),22));
    zext_ln703_18_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2041_p4),19));
    zext_ln703_19_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_22_reg_2523),22));
    zext_ln703_5_fu_1543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_3_reg_2473),19));
    zext_ln835_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln144_fu_1078_p1),64));
end behav;

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv14_3FFE : STD_LOGIC_VECTOR (13 downto 0) := "11111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln444_reg_1276 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_2_reg_1285 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1247 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_1238 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal and_ln512_reg_1306 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1306_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_257 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_fu_268_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_fu_276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_reg_1197 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_reg_1202 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln507_fu_312_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln507_reg_1207 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln147_fu_330_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln147_reg_1213 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln147_1_fu_354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln147_1_reg_1219 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln458_fu_358_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln458_reg_1224 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln443_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_1242 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1252 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_1256 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_reg_1260 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_fu_574_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_reg_1266 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_2_fu_606_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_2_reg_1271 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln444_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op139_read_state4 : BOOLEAN;
    signal ap_predicate_op146_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_1276_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1276_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_2_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_2_reg_1285_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_727_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln458_1_fu_735_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln458_1_reg_1294 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln457_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1299_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1306_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1306_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal right_border_buf_0_6_reg_1310 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln493_1_fu_758_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_1_reg_1321 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1328 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1334 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_4_fu_876_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_reg_1340 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_reg_1340_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_894_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_reg_1347 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1354 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1359 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_4_fu_1024_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_4_reg_1365 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln785_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln785_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_we0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_we0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal t_V_reg_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln835_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_806_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_823_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal stop_row_fu_268_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln243_fu_272_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal cols_fu_276_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1304_fu_280_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1304_fu_280_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln443_fu_284_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln243_fu_272_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln443_1_fu_294_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln506_fu_304_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln458_fu_308_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln506_fu_304_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln147_fu_318_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln147_fu_318_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln_fu_322_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln147_1_fu_336_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln147_1_fu_336_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln147_fu_344_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln147_fu_348_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln458_fu_308_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_386_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln506_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_429_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_1_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_fu_468_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_1_fu_485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_2_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_516_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_1_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_1_fu_530_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln147_1_fu_481_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln144_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_fu_547_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln506_1_fu_419_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln118_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_fu_560_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln144_fu_552_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_fu_566_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln147_2_fu_543_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln144_1_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_1_fu_579_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln118_1_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_1_fu_592_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln144_1_fu_584_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_1_fu_598_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_622_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_644_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_2_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_3_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_669_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_2_fu_677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_2_fu_683_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln147_fu_696_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln118_4_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_2_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln118_2_fu_701_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln891_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_777_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_795_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_813_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_865_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_883_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_917_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1118_fu_929_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln703_fu_935_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_fu_941_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_fu_913_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_fu_950_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_1_fu_925_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_3_fu_956_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_1_fu_960_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln703_1_fu_944_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_2_fu_970_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln703_1_fu_966_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_1_fu_985_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln703_5_fu_997_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_4_fu_993_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_2_fu_1000_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln703_3_fu_979_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln703_6_fu_1006_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_fu_1010_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln703_2_fu_974_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1030_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln703_fu_1070_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_5_fu_1075_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln785_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1095_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1080_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op140_store_state4 : BOOLEAN;
    signal ap_enable_operation_140 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op138_load_state4 : BOOLEAN;
    signal ap_enable_operation_138 : BOOLEAN;
    signal ap_enable_operation_163 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op168_store_state5 : BOOLEAN;
    signal ap_enable_operation_168 : BOOLEAN;
    signal ap_predicate_op142_store_state4 : BOOLEAN;
    signal ap_enable_operation_142 : BOOLEAN;
    signal ap_enable_operation_136 : BOOLEAN;
    signal ap_enable_operation_160 : BOOLEAN;
    signal ap_predicate_op169_store_state5 : BOOLEAN;
    signal ap_enable_operation_169 : BOOLEAN;
    signal ap_predicate_op144_store_state4 : BOOLEAN;
    signal ap_enable_operation_144 : BOOLEAN;
    signal ap_enable_operation_133 : BOOLEAN;
    signal ap_enable_operation_157 : BOOLEAN;
    signal ap_predicate_op147_store_state4 : BOOLEAN;
    signal ap_enable_operation_147 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component conv_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2D_k_buf_0_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        we0 => k_buf_0_val_3_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        we0 => k_buf_0_val_4_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_3_q0);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_4_q0);

    conv_mux_32_8_1_1_U9 : component conv_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_130,
        din1 => right_border_buf_0_1_fu_134,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_1_reg_1321,
        dout => tmp_3_fu_777_p5);

    conv_mux_32_8_1_1_U10 : component conv_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_142,
        din1 => right_border_buf_0_4_fu_146,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_1_reg_1321,
        dout => tmp_4_fu_795_p5);

    conv_mux_32_8_1_1_U11 : component conv_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_6_reg_1310,
        din1 => right_border_buf_0_2_fu_138,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_1_reg_1321,
        dout => tmp_5_fu_813_p5);

    conv_mux_32_8_1_1_U12 : component conv_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_788_p3,
        din1 => col_buf_0_val_1_0_fu_806_p3,
        din2 => col_buf_0_val_2_0_fu_823_p3,
        din3 => sub_ln493_reg_1266,
        dout => tmp_6_fu_865_p5);

    conv_mux_32_8_1_1_U13 : component conv_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_788_p3,
        din1 => col_buf_0_val_1_0_fu_806_p3,
        din2 => col_buf_0_val_2_0_fu_823_p3,
        din3 => sub_ln493_2_reg_1271,
        dout => tmp_7_fu_883_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln444_fu_611_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((icmp_ln443_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_611_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_257 <= j_V_fu_616_p2;
            elsif (((icmp_ln443_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_257 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                t_V_reg_246 <= i_V_reg_1233;
            elsif ((not(((p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_246 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln458_reg_1224 <= add_ln458_fu_358_p2;
                add_ln507_reg_1207 <= add_ln507_fu_312_p2;
                cols_reg_1191 <= cols_fu_276_p1;
                    sext_ln147_1_reg_1219(31 downto 1) <= sext_ln147_1_fu_354_p1(31 downto 1);
                sext_ln443_1_reg_1202 <= sext_ln443_1_fu_300_p1;
                sext_ln443_reg_1197 <= sext_ln443_fu_290_p1;
                stop_row_reg_1181 <= stop_row_fu_268_p1;
                xor_ln147_reg_1213 <= xor_ln147_fu_330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1306_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_4_reg_1365 <= add_ln703_4_fu_1024_p2;
                icmp_ln785_reg_1370 <= icmp_ln785_fu_1040_p2;
                p_Result_s_reg_1359 <= p_Val2_s_fu_1010_p2(10 downto 10);
                src_kernel_win_0_va_6_reg_1354 <= src_kernel_win_0_va_fu_114;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_611_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_2_reg_1285 <= and_ln118_2_fu_663_p2;
                and_ln512_reg_1306 <= and_ln512_fu_744_p2;
                or_ln457_reg_1299 <= or_ln457_fu_739_p2;
                trunc_ln458_1_reg_1294 <= trunc_ln458_1_fu_735_p1;
                x_reg_1289 <= x_fu_727_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_2_reg_1285_pp0_iter1_reg <= and_ln118_2_reg_1285;
                and_ln512_reg_1306_pp0_iter1_reg <= and_ln512_reg_1306;
                icmp_ln444_reg_1276 <= icmp_ln444_fu_611_p2;
                icmp_ln444_reg_1276_pp0_iter1_reg <= icmp_ln444_reg_1276;
                or_ln457_reg_1299_pp0_iter1_reg <= or_ln457_reg_1299;
                right_border_buf_0_6_reg_1310 <= ap_sig_allocacmp_right_border_buf_0_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_1306_pp0_iter2_reg <= and_ln512_reg_1306_pp0_iter1_reg;
                and_ln512_reg_1306_pp0_iter3_reg <= and_ln512_reg_1306_pp0_iter2_reg;
                icmp_ln444_reg_1276_pp0_iter2_reg <= icmp_ln444_reg_1276_pp0_iter1_reg;
                src_kernel_win_0_va_4_reg_1340 <= src_kernel_win_0_va_4_fu_876_p3;
                src_kernel_win_0_va_4_reg_1340_pp0_iter3_reg <= src_kernel_win_0_va_4_reg_1340;
                src_kernel_win_0_va_5_reg_1347 <= src_kernel_win_0_va_5_fu_894_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1233 <= i_V_fu_369_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_1_reg_1256 <= icmp_ln879_1_fu_408_p2;
                icmp_ln879_reg_1252 <= icmp_ln879_fu_402_p2;
                icmp_ln887_reg_1238 <= icmp_ln887_fu_375_p2;
                icmp_ln899_1_reg_1260 <= icmp_ln899_1_fu_414_p2;
                icmp_ln899_reg_1247 <= icmp_ln899_fu_396_p2;
                sub_ln493_2_reg_1271 <= sub_ln493_2_fu_606_p2;
                sub_ln493_reg_1266 <= sub_ln493_fu_574_p2;
                xor_ln457_reg_1242 <= xor_ln457_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_4_addr_reg_1328 <= zext_ln835_fu_752_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1334 <= zext_ln835_fu_752_p1(11 - 1 downto 0);
                sub_ln493_1_reg_1321 <= sub_ln493_1_fu_758_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_134 <= right_border_buf_0_s_fu_130;
                right_border_buf_0_2_fu_138 <= right_border_buf_0_6_reg_1310;
                right_border_buf_0_3_fu_142 <= col_buf_0_val_1_0_fu_806_p3;
                right_border_buf_0_4_fu_146 <= right_border_buf_0_3_fu_142;
                right_border_buf_0_5_fu_150 <= col_buf_0_val_2_0_fu_823_p3;
                right_border_buf_0_s_fu_130 <= col_buf_0_val_0_0_fu_788_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1276_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_118 <= src_kernel_win_0_va_fu_114;
                src_kernel_win_0_va_2_fu_122 <= src_kernel_win_0_va_5_reg_1347;
                src_kernel_win_0_va_3_fu_126 <= src_kernel_win_0_va_2_fu_122;
                src_kernel_win_0_va_fu_114 <= src_kernel_win_0_va_4_reg_1340;
            end if;
        end if;
    end process;
    sext_ln147_1_reg_1219(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, icmp_ln443_fu_364_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_638_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_2_reg_257));
    add_ln118_1_fu_592_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(trunc_ln506_1_fu_419_p1));
    add_ln118_fu_560_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_1_fu_419_p1));
    add_ln147_fu_348_p2 <= std_logic_vector(signed(ap_const_lv14_3FFE) + signed(sext_ln147_fu_344_p1));
    add_ln443_1_fu_294_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(sext_ln243_fu_272_p1));
    add_ln443_fu_284_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(sext_ln1304_fu_280_p1));
    add_ln458_fu_358_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln458_fu_308_p1));
    add_ln506_1_fu_485_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_246));
    add_ln506_fu_423_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_246));
    add_ln507_fu_312_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_fu_304_p1));
    add_ln703_1_fu_960_p2 <= std_logic_vector(unsigned(zext_ln1118_1_fu_925_p1) + unsigned(zext_ln703_3_fu_956_p1));
    add_ln703_2_fu_1000_p2 <= std_logic_vector(unsigned(zext_ln703_5_fu_997_p1) + unsigned(zext_ln703_4_fu_993_p1));
    add_ln703_4_fu_1024_p2 <= std_logic_vector(unsigned(sub_ln703_2_fu_974_p2) + unsigned(src_kernel_win_0_va_1_fu_118));
    add_ln703_5_fu_1075_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_4_reg_1340_pp0_iter3_reg) + unsigned(shl_ln703_fu_1070_p2));
    add_ln703_fu_950_p2 <= std_logic_vector(unsigned(zext_ln703_fu_941_p1) + unsigned(zext_ln1118_fu_913_p1));
    and_ln118_1_fu_510_p2 <= (xor_ln118_2_fu_499_p2 and icmp_ln118_1_fu_505_p2);
    and_ln118_2_fu_663_p2 <= (xor_ln118_3_fu_652_p2 and icmp_ln118_2_fu_658_p2);
    and_ln118_fu_448_p2 <= (xor_ln118_1_fu_437_p2 and icmp_ln118_fu_443_p2);
    and_ln144_fu_721_p2 <= (or_ln118_fu_715_p2 and icmp_ln144_2_fu_691_p2);
    and_ln512_fu_744_p2 <= (icmp_ln899_reg_1247 and icmp_ln891_fu_632_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, and_ln512_reg_1306_pp0_iter3_reg, ap_predicate_op139_read_state4, ap_predicate_op146_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_1306_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op139_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, and_ln512_reg_1306_pp0_iter3_reg, ap_predicate_op139_read_state4, ap_predicate_op146_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_1306_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op139_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, and_ln512_reg_1306_pp0_iter3_reg, ap_predicate_op139_read_state4, ap_predicate_op146_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_1306_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op139_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_block_state1 <= ((p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op139_read_state4, ap_predicate_op146_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op139_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter4_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_1306_pp0_iter3_reg)
    begin
                ap_block_state7_pp0_stage0_iter4 <= ((ap_const_lv1_1 = and_ln512_reg_1306_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln443_fu_364_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_133_assign_proc : process(icmp_ln444_reg_1276)
    begin
                ap_enable_operation_133 <= (icmp_ln444_reg_1276 = ap_const_lv1_0);
    end process;


    ap_enable_operation_136_assign_proc : process(icmp_ln444_reg_1276)
    begin
                ap_enable_operation_136 <= (icmp_ln444_reg_1276 = ap_const_lv1_0);
    end process;


    ap_enable_operation_138_assign_proc : process(ap_predicate_op138_load_state4)
    begin
                ap_enable_operation_138 <= (ap_predicate_op138_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_140_assign_proc : process(ap_predicate_op140_store_state4)
    begin
                ap_enable_operation_140 <= (ap_predicate_op140_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_142_assign_proc : process(ap_predicate_op142_store_state4)
    begin
                ap_enable_operation_142 <= (ap_predicate_op142_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_144_assign_proc : process(ap_predicate_op144_store_state4)
    begin
                ap_enable_operation_144 <= (ap_predicate_op144_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_147_assign_proc : process(ap_predicate_op147_store_state4)
    begin
                ap_enable_operation_147 <= (ap_predicate_op147_store_state4 = ap_const_boolean_1);
    end process;

        ap_enable_operation_157 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_160 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_163_assign_proc : process(or_ln457_reg_1299_pp0_iter1_reg)
    begin
                ap_enable_operation_163 <= (or_ln457_reg_1299_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_168_assign_proc : process(ap_predicate_op168_store_state5)
    begin
                ap_enable_operation_168 <= (ap_predicate_op168_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_169_assign_proc : process(ap_predicate_op169_store_state5)
    begin
                ap_enable_operation_169 <= (ap_predicate_op169_store_state5 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op138_load_state4_assign_proc : process(icmp_ln444_reg_1276, or_ln457_reg_1299)
    begin
                ap_predicate_op138_load_state4 <= ((or_ln457_reg_1299 = ap_const_lv1_1) and (icmp_ln444_reg_1276 = ap_const_lv1_0));
    end process;


    ap_predicate_op139_read_state4_assign_proc : process(icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247)
    begin
                ap_predicate_op139_read_state4 <= ((ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0));
    end process;


    ap_predicate_op140_store_state4_assign_proc : process(icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln879_reg_1252)
    begin
                ap_predicate_op140_store_state4 <= ((icmp_ln879_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0));
    end process;


    ap_predicate_op142_store_state4_assign_proc : process(icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln879_1_reg_1256)
    begin
                ap_predicate_op142_store_state4 <= ((icmp_ln879_1_reg_1256 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0));
    end process;


    ap_predicate_op144_store_state4_assign_proc : process(icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln879_reg_1252)
    begin
                ap_predicate_op144_store_state4 <= ((icmp_ln879_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0));
    end process;


    ap_predicate_op146_read_state4_assign_proc : process(icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln887_reg_1238)
    begin
                ap_predicate_op146_read_state4 <= ((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln444_reg_1276 = ap_const_lv1_0));
    end process;


    ap_predicate_op147_store_state4_assign_proc : process(icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln887_reg_1238)
    begin
                ap_predicate_op147_store_state4 <= ((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln444_reg_1276 = ap_const_lv1_0));
    end process;


    ap_predicate_op168_store_state5_assign_proc : process(icmp_ln899_reg_1247, icmp_ln887_reg_1238, and_ln118_2_reg_1285_pp0_iter1_reg)
    begin
                ap_predicate_op168_store_state5 <= ((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285_pp0_iter1_reg));
    end process;


    ap_predicate_op169_store_state5_assign_proc : process(icmp_ln899_reg_1247, icmp_ln887_reg_1238, and_ln118_2_reg_1285_pp0_iter1_reg)
    begin
                ap_predicate_op169_store_state5 <= ((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285_pp0_iter1_reg));
    end process;

    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_right_border_buf_0_6_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_1247, icmp_ln887_reg_1238, and_ln118_2_reg_1285_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_5_fu_150, col_buf_0_val_2_0_fu_823_p3)
    begin
        if (((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_6 <= col_buf_0_val_2_0_fu_823_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_6 <= right_border_buf_0_5_fu_150;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_788_p3 <= 
        k_buf_0_val_3_q0 when (or_ln457_reg_1299_pp0_iter1_reg(0) = '1') else 
        tmp_3_fu_777_p5;
    col_buf_0_val_1_0_fu_806_p3 <= 
        k_buf_0_val_4_q0 when (or_ln457_reg_1299_pp0_iter1_reg(0) = '1') else 
        tmp_4_fu_795_p5;
    col_buf_0_val_2_0_fu_823_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_1299_pp0_iter1_reg(0) = '1') else 
        tmp_5_fu_813_p5;
    cols_fu_276_p0 <= p_src_cols_V_dout;
        cols_fu_276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_fu_276_p0),32));

    i_V_fu_369_p2 <= std_logic_vector(unsigned(t_V_reg_246) + unsigned(ap_const_lv32_1));
    icmp_ln118_1_fu_505_p2 <= "1" when (signed(add_ln506_1_fu_485_p2) < signed(stop_row_reg_1181)) else "0";
    icmp_ln118_2_fu_658_p2 <= "1" when (signed(ImagLoc_x_fu_638_p2) < signed(cols_reg_1191)) else "0";
    icmp_ln118_fu_443_p2 <= "1" when (signed(add_ln506_fu_423_p2) < signed(stop_row_reg_1181)) else "0";
    icmp_ln144_1_fu_538_p2 <= "1" when (signed(select_ln139_1_fu_530_p3) < signed(stop_row_reg_1181)) else "0";
    icmp_ln144_2_fu_691_p2 <= "1" when (signed(select_ln139_2_fu_683_p3) < signed(cols_reg_1191)) else "0";
    icmp_ln144_fu_476_p2 <= "1" when (signed(select_ln139_fu_468_p3) < signed(stop_row_reg_1181)) else "0";
    icmp_ln443_fu_364_p2 <= "1" when (t_V_reg_246 = sext_ln443_1_reg_1202) else "0";
    icmp_ln444_fu_611_p2 <= "1" when (t_V_2_reg_257 = sext_ln443_reg_1197) else "0";
    icmp_ln785_fu_1040_p2 <= "0" when (tmp_8_fu_1030_p4 = ap_const_lv3_0) else "1";
    icmp_ln879_1_fu_408_p2 <= "1" when (t_V_reg_246 = ap_const_lv32_0) else "0";
    icmp_ln879_fu_402_p2 <= "1" when (t_V_reg_246 = ap_const_lv32_1) else "0";
    icmp_ln887_fu_375_p2 <= "1" when (unsigned(t_V_reg_246) < unsigned(stop_row_reg_1181)) else "0";
    icmp_ln891_fu_632_p2 <= "0" when (tmp_11_fu_622_p4 = ap_const_lv31_0) else "1";
    icmp_ln899_1_fu_414_p2 <= "1" when (unsigned(t_V_reg_246) > unsigned(stop_row_reg_1181)) else "0";
    icmp_ln899_fu_396_p2 <= "0" when (tmp_fu_386_p4 = ap_const_lv31_0) else "1";

    internal_ap_ready_assign_proc : process(icmp_ln443_fu_364_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_616_p2 <= std_logic_vector(unsigned(t_V_2_reg_257) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= zext_ln835_fu_752_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= zext_ln835_fu_752_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1276, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln879_reg_1252, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln887_reg_1238, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= zext_ln835_fu_752_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1328;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1276, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln879_1_reg_1256, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_1256 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_ln899_reg_1247, icmp_ln887_reg_1238, ap_block_pp0_stage0_11001, and_ln118_2_reg_1285_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= zext_ln835_fu_752_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1334;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln879_reg_1252, ap_block_pp0_stage0_11001, or_ln457_reg_1299)
    begin
        if ((((icmp_ln879_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_1299 = ap_const_lv1_1) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln879_reg_1252, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_ln899_reg_1247, icmp_ln887_reg_1238, ap_block_pp0_stage0_11001, and_ln118_2_reg_1285_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln118_fu_715_p2 <= (xor_ln118_4_fu_709_p2 or tmp_12_fu_644_p3);
    or_ln340_fu_1103_p2 <= (p_Result_s_reg_1359 or overflow_fu_1090_p2);
    or_ln457_fu_739_p2 <= (xor_ln457_reg_1242 or icmp_ln118_2_fu_658_p2);
    overflow_fu_1090_p2 <= (xor_ln785_fu_1085_p2 and icmp_ln785_reg_1370);
    p_Val2_1_fu_1080_p2 <= std_logic_vector(unsigned(add_ln703_4_reg_1365) + unsigned(add_ln703_5_fu_1075_p2));
    p_Val2_s_fu_1010_p2 <= std_logic_vector(unsigned(sub_ln703_3_fu_979_p2) + unsigned(zext_ln703_6_fu_1006_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, and_ln512_reg_1306_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1306_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        select_ln340_fu_1095_p3 when (or_ln340_fu_1103_p2(0) = '1') else 
        p_Val2_1_fu_1080_p2;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, and_ln512_reg_1306_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1306_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln444_reg_1276, and_ln118_2_reg_1285, icmp_ln899_reg_1247, icmp_ln887_reg_1238)
    begin
        if ((((icmp_ln887_reg_1238 = ap_const_lv1_1) and (icmp_ln899_reg_1247 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln118_2_reg_1285) and (icmp_ln899_reg_1247 = ap_const_lv1_0) and (icmp_ln444_reg_1276 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op139_read_state4, ap_predicate_op146_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op146_read_state4 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op139_read_state4 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln118_1_fu_598_p3 <= 
        add_ln118_1_fu_592_p2 when (and_ln118_1_fu_510_p2(0) = '1') else 
        select_ln144_1_fu_584_p3;
    select_ln118_2_fu_701_p3 <= 
        ImagLoc_x_fu_638_p2 when (and_ln118_2_fu_663_p2(0) = '1') else 
        sub_ln147_fu_696_p2;
    select_ln118_fu_566_p3 <= 
        add_ln118_fu_560_p2 when (and_ln118_fu_448_p2(0) = '1') else 
        select_ln144_fu_552_p3;
    select_ln139_1_fu_530_p3 <= 
        sub_ln142_1_fu_524_p2 when (tmp_10_fu_516_p3(0) = '1') else 
        add_ln506_1_fu_485_p2;
    select_ln139_2_fu_683_p3 <= 
        sub_ln142_2_fu_677_p2 when (tmp_13_fu_669_p3(0) = '1') else 
        ImagLoc_x_fu_638_p2;
    select_ln139_fu_468_p3 <= 
        sub_ln142_fu_462_p2 when (tmp_2_fu_454_p3(0) = '1') else 
        add_ln506_fu_423_p2;
    select_ln144_1_fu_584_p3 <= 
        trunc_ln147_2_fu_543_p1 when (icmp_ln144_1_fu_538_p2(0) = '1') else 
        sub_ln144_1_fu_579_p2;
    select_ln144_fu_552_p3 <= 
        trunc_ln147_1_fu_481_p1 when (icmp_ln144_fu_476_p2(0) = '1') else 
        sub_ln144_fu_547_p2;
    select_ln340_fu_1095_p3 <= 
        ap_const_lv8_FF when (xor_ln785_fu_1085_p2(0) = '1') else 
        ap_const_lv8_0;
    sext_ln1304_fu_280_p0 <= p_src_cols_V_dout;
        sext_ln1304_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1304_fu_280_p0),13));

        sext_ln147_1_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln147_fu_348_p2),32));

        sext_ln147_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln147_1_fu_336_p3),14));

    sext_ln243_fu_272_p0 <= p_src_rows_V_dout;
        sext_ln243_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln243_fu_272_p0),13));

        sext_ln443_1_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_1_fu_294_p2),32));

        sext_ln443_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_fu_284_p2),32));

    sext_ln_fu_322_p3 <= (trunc_ln147_fu_318_p1 & ap_const_lv1_0);
    shl_ln1118_1_fu_985_p3 <= (src_kernel_win_0_va_fu_114 & ap_const_lv1_0);
    shl_ln1118_fu_929_p2 <= std_logic_vector(shift_left(unsigned(src_kernel_win_0_va_2_fu_122),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln147_1_fu_336_p1 <= p_src_cols_V_dout;
    shl_ln147_1_fu_336_p3 <= (shl_ln147_1_fu_336_p1 & ap_const_lv1_0);
    shl_ln703_fu_1070_p2 <= std_logic_vector(shift_left(unsigned(src_kernel_win_0_va_6_reg_1354),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln_fu_917_p3 <= (src_kernel_win_0_va_2_fu_122 & ap_const_lv1_0);
    src_kernel_win_0_va_4_fu_876_p3 <= 
        tmp_6_fu_865_p5 when (icmp_ln899_1_reg_1260(0) = '1') else 
        col_buf_0_val_0_0_fu_788_p3;
    src_kernel_win_0_va_5_fu_894_p3 <= 
        tmp_7_fu_883_p5 when (icmp_ln899_1_reg_1260(0) = '1') else 
        col_buf_0_val_2_0_fu_823_p3;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    stop_row_fu_268_p0 <= p_src_rows_V_dout;
        stop_row_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(stop_row_fu_268_p0),32));

    sub_ln142_1_fu_524_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_246));
    sub_ln142_2_fu_677_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_2_reg_257));
    sub_ln142_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_246));
    sub_ln144_1_fu_579_p2 <= std_logic_vector(unsigned(xor_ln147_reg_1213) - unsigned(trunc_ln147_2_fu_543_p1));
    sub_ln144_fu_547_p2 <= std_logic_vector(unsigned(xor_ln147_reg_1213) - unsigned(trunc_ln147_1_fu_481_p1));
    sub_ln147_fu_696_p2 <= std_logic_vector(signed(sext_ln147_1_reg_1219) - signed(select_ln139_2_fu_683_p3));
    sub_ln493_1_fu_758_p2 <= std_logic_vector(unsigned(add_ln458_reg_1224) - unsigned(trunc_ln458_1_reg_1294));
    sub_ln493_2_fu_606_p2 <= std_logic_vector(unsigned(add_ln507_reg_1207) - unsigned(select_ln118_1_fu_598_p3));
    sub_ln493_fu_574_p2 <= std_logic_vector(unsigned(add_ln507_reg_1207) - unsigned(select_ln118_fu_566_p3));
    sub_ln703_1_fu_944_p2 <= std_logic_vector(unsigned(sub_ln703_fu_935_p2) - unsigned(src_kernel_win_0_va_3_fu_126));
    sub_ln703_2_fu_974_p2 <= std_logic_vector(unsigned(sub_ln703_1_fu_944_p2) - unsigned(src_kernel_win_0_va_5_reg_1347));
    sub_ln703_3_fu_979_p2 <= std_logic_vector(unsigned(zext_ln703_2_fu_970_p1) - unsigned(zext_ln703_1_fu_966_p1));
    sub_ln703_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(shl_ln1118_fu_929_p2));
    tmp_10_fu_516_p3 <= add_ln506_1_fu_485_p2(31 downto 31);
    tmp_11_fu_622_p4 <= t_V_2_reg_257(31 downto 1);
    tmp_12_fu_644_p3 <= ImagLoc_x_fu_638_p2(31 downto 31);
    tmp_13_fu_669_p3 <= ImagLoc_x_fu_638_p2(31 downto 31);
    tmp_1_fu_429_p3 <= add_ln506_fu_423_p2(31 downto 31);
    tmp_2_fu_454_p3 <= add_ln506_fu_423_p2(31 downto 31);
    tmp_8_fu_1030_p4 <= p_Val2_s_fu_1010_p2(10 downto 8);
    tmp_9_fu_491_p3 <= add_ln506_1_fu_485_p2(31 downto 31);
    tmp_fu_386_p4 <= t_V_reg_246(31 downto 1);
    trunc_ln147_1_fu_481_p1 <= select_ln139_fu_468_p3(2 - 1 downto 0);
    trunc_ln147_2_fu_543_p1 <= select_ln139_1_fu_530_p3(2 - 1 downto 0);
    trunc_ln147_fu_318_p0 <= p_src_rows_V_dout;
    trunc_ln147_fu_318_p1 <= trunc_ln147_fu_318_p0(1 - 1 downto 0);
    trunc_ln458_1_fu_735_p1 <= x_fu_727_p3(2 - 1 downto 0);
    trunc_ln458_fu_308_p0 <= p_src_cols_V_dout;
    trunc_ln458_fu_308_p1 <= trunc_ln458_fu_308_p0(2 - 1 downto 0);
    trunc_ln506_1_fu_419_p1 <= t_V_reg_246(2 - 1 downto 0);
    trunc_ln506_fu_304_p0 <= p_src_rows_V_dout;
    trunc_ln506_fu_304_p1 <= trunc_ln506_fu_304_p0(2 - 1 downto 0);
    x_fu_727_p3 <= 
        select_ln139_2_fu_683_p3 when (and_ln144_fu_721_p2(0) = '1') else 
        select_ln118_2_fu_701_p3;
    xor_ln118_1_fu_437_p2 <= (tmp_1_fu_429_p3 xor ap_const_lv1_1);
    xor_ln118_2_fu_499_p2 <= (tmp_9_fu_491_p3 xor ap_const_lv1_1);
    xor_ln118_3_fu_652_p2 <= (tmp_12_fu_644_p3 xor ap_const_lv1_1);
    xor_ln118_4_fu_709_p2 <= (icmp_ln118_2_fu_658_p2 xor ap_const_lv1_1);
    xor_ln147_fu_330_p2 <= (sext_ln_fu_322_p3 xor ap_const_lv2_2);
    xor_ln457_fu_380_p2 <= (icmp_ln887_fu_375_p2 xor ap_const_lv1_1);
    xor_ln785_fu_1085_p2 <= (p_Result_s_reg_1359 xor ap_const_lv1_1);
    zext_ln1118_1_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_917_p3),10));
    zext_ln1118_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_126),9));
    zext_ln703_1_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_1_fu_960_p2),11));
    zext_ln703_2_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_118),11));
    zext_ln703_3_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_fu_950_p2),10));
    zext_ln703_4_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_1_fu_985_p3),10));
    zext_ln703_5_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_reg_1340),10));
    zext_ln703_6_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_2_fu_1000_p2),11));
    zext_ln703_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_reg_1347),9));
    zext_ln835_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_1289),64));
end behav;
